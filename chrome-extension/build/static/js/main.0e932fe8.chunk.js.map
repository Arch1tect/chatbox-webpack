{"version":3,"sources":["config/urls.js","utils/url.js","utils/pageTitle.js","socket/socket.js","context/tab-context.js","containers/Chat/Header/Users.js","context/account-context.js","containers/Chat/Header/Header.js","containers/Chat/Message/Body.js","containers/OtherProfile/ProfileCard.js","services/user.js","containers/Account/Follow/event.js","services/follow.js","containers/OtherProfile/ProfileMeta/ProfileMeta.js","containers/OtherProfile/AvatarWithHoverCard.js","containers/Chat/Message/Message.js","containers/Chat/Body.js","components/Emoji/Emoji.js","components/OutsideClickDetector.js","components/InputWithPicker/InputWithPicker.js","containers/Chat/Footer/Footer.js","containers/Chat/index.js","containers/Comment/Header.js","containers/Comment/Message/Message.js","containers/Comment/Body.js","containers/Comment/Comment.js","services/account.js","containers/Account/ResetPassword.js","containers/Account/AvatarUploader/AvatarUploader.js","containers/Account/EditProfile.js","containers/Account/Profile/Profile.js","containers/Account/Follow/Follow.js","utils/storage.js","containers/Account/Login.js","containers/Account/Account.js","containers/OtherProfile/ProfileBody/ProfileBody.js","containers/OtherProfile/OtherProfile.js","services/message.js","containers/Inbox/Conversation/Conversation.js","containers/Inbox/Inbox.js","services/danmu.js","containers/Home/Danmus/Danmus.js","services/comment.js","containers/Home/Comments/Comments.js","containers/Home/Users/Users.js","services/room.js","containers/Home/Rooms/Rooms.js","containers/Home/Home.js","containers/Tab/Tab.js","App.js","serviceWorker.js","index.js"],"names":["urls","cloudFront","debugMsgSrc","socketAPI","dbAPI","_url","window","location","search","substring","getUrl","getDomain","domain","url","hostname","indexOf","split","extractHostname","splitArr","arrLen","length","_title","getPageTitle","_socket","_config","account","roomId","socketManager","sendMessage","msg","emit","updatePageInfo","data","connect","console","debug","connected","warn","io","path","on","self","sender","toString","id","type","message","startsWith","content","userId","name","username","hasAvatar","avatarSrc","danmuMsg","parent","postMessage","_sendDanmu","socketHandler","onLiveMsg","onUserJoin","onUserLeft","onDisconnected","onConnected","version","lang","pageTitle","token","togglePageSite","onRoomChange","disconnect","setTimeout","TabContext","React","createContext","usersStyle","background","position","zIndex","left","width","overflow","maxHeight","padding","paddingTop","borderBottom","Users","props","tabContext","useContext","users","map","user","numId","react_default","a","createElement","className","onClick","selectOtherUser","key","es_avatar","title","size","shape","icon","src","style","accountContext","ChatHeader","_useState","useState","_useState2","Object","slicedToArray","showUsers","toggleUsers","_useState3","_useState4","room","setRoom","_useState5","_useState6","setUsers","AccountContext","useEffect","log","onlineUsers","addEventListener","e","origin","es_button","changeTab","es_radio","Group","value","buttonStyle","onChange","val","target","tooltip","placement","Button","border","right","marginLeft","Header_Users","MessageBody","imgSrc","chrome","extension","getURL","alt","Meta","Card","aboutStyle","display","whiteSpace","textOverflow","textAlign","marginBottom","AvatarWithFollowerCount","ProfileCard","following","followerCount","followUser","directMessage","footer","about","stopPropagation","avatar","card","description","getUser","axios","get","concat","getLatestUsers","updateUser","payload","formData","FormData","append","post","followEventHandler","follow","ProfileMeta","setUser","setFollowerCount","setFollowing","_useState7","_useState8","loading","setLoading","_useState9","_useState10","loaded","setLoaded","wait","Boolean","toggleFollow","then","resp","newAccountData","objectSpread","followingCount","setAccount","updateAccountFollowing","catch","err","error","userData","childrenWithProps","Children","children","child","cloneElement","AvatarWrapper","showingCard","onMouseEnter","onMouseLeave","MyPoper","visibility","Popper_default","showCard","hideCard","anchorEl","open","OtherProfile_ProfileCard","AvatarWithHoverCard","setAnchor","hideCardTimer","clearTimeout","el","ProfileMeta_ProfileMeta","currentTarget","userNameStyle","fontSize","verticalAlign","marginRight","ChatMessage","messageHeader","withHoverCard","OtherProfile_AvatarWithHoverCard","marginTop","mergeAbove","Message_Body","chatBodyStyle","height","overflowY","overflowX","paddingBottom","AUTO_SCROLL_TRESHOLD_DISTANCE","ChatBody","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","scrollToBottomIfNearBottom","timeout","bodyDiv","bodyRef","current","scrollHeight","scrollTop","offsetHeight","addMsg","setState","state","messages","toConsumableArray","createRef","addLiveMsgToChatBody","_this2","lastMsg","index","forEach","push","Message","ref","Component","contextType","OutsideAlerter","setWrapperRef","bind","assertThisInitialized","handleClickOutside","document","removeEventListener","node","wrapperRef","event","exceptionClass","contains","close","isOutsideClick","i18n","clear","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","categorieslabel","skintones","1","2","3","4","5","6","customEmojis","i","imageUrl","short_names","Emoji","OutsideClickDetector","dist_es","emojiTooltip","include","onSelect","addEmoji","set","showPreview","InputWithPicker","input","setInput","inputRef","useRef","showEmoji","setShowEmoji","willShowEmoji","setWillShowEmoji","sending","focus","emojiBtn","es_icon","prevState","margin","components_Emoji_Emoji","emoji","send","native","es_input","onKeyDown","addonBefore","disabled","placeholder","MESSAGE_TIME_GAP","lastMsgTime","Footer","components_InputWithPicker_InputWithPicker","now","Date","Chat","Header_Header","Chat_Body","Chat_Footer_Footer","Option","Select","CommentHeader","es_select","orderBy","defaultValue","Comment","score","setScore","voted","setVoted","time","noFooter","theme","prevScore","vote","reply","CommentBody","comments","comment","Comment_Message_Message","LIMIT","commentBodyStyle","TextArea","Input","CommentTab","onFocus","inputFocus","replyTo","replyToUserId","commentId","comment_id","res","submit","reply_to_user_id","reply_to_user_name","submitting","context","selfMsg","Math","random","moment","fromNow","clearInput","handleInput","offset","order","loadComments","loadMore","limit","utc","created","rowNum","rows","Comment_Header","Comment_Body","getAccount","login","password","logout","resetPassword","ResetPasswordForm","confirmDirty","handleSubmit","preventDefault","form","validateFieldsAndScroll","values","success","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","back","es_form","assign","labelCol","xs","span","sm","wrapperCol","onSubmit","Item","label","rules","required","validator","onBlur","htmlType","WrappedResetPasswordForm","Form","create","App","pictures","onDrop","picture","setFile","alreadySelectedImageClassName","compiled_default","singleImage","buttonClassName","withPreview","withIcon","withLabel","buttonText","fileTypeError","fileSizeError","imgExtension","maxFileSize","avatarFile","EditProfileForm","valuePropName","getValueFromEvent","AvatarUploader_AvatarUploader","file","whitespace","initialValue","WrappedEditProfileForm","avatarStyle","ProfileBodyStyle","minWidth","maxWidth","paddingLeft","paddingRight","wordBreak","Profile","loggingOut","setLoggingOut","fontWeight","row","gutter","col","credit","showFollowings","showFollowers","showEditProfile","showResetPassword","Follow","setShowFollowers","loadingMore","setLoadingMore","usersRef","loadUsers","updatedUsers","filter","u","prevUsers","storage","local","item","localStorage","hasOwnProperty","JSON","parse","getItem","stringValue","stringify","setItem","storageEvent","createEvent","initEvent","eventName","newValue","dispatchEvent","onChanged","addListener","changes","area","NormalLoginForm","loginUser","storageManager","registering","setFieldsValue","autoLogin","slice","register","stopAutoLogin","prefix","color","WrappedNormalLoginForm","Account","resettingPassword","setResetPasswordState","edittingProfile","setEdittingProfileState","showingFollow","setShowingFollowState","setShowFollowersState","loadingAccount","setLoadingAccount","backToMainPage","ResetPassword","Account_Follow_Follow","EditProfile","Account_Profile_Profile","Login","ProfileBody","OtherProfile","ProfileBody_ProfileBody","getMessages","params","conversationBodyStyle","Conversation","conversation","other","setSending","body","text","mergeAndSaveNewConversations","Inbox","storageKey","prevAccountRef","conversations","setConversations","showNotifications","setShowNotifications","selectedConversation","newConversations","keys","_conversations$userId","apply","getOffset","c","max","defineProperty","conversationsArray","sort","b","Inbox_Conversation_Conversation","getLatestDanmus","Danmus","danmus","setDanmus","danmu","rel","href","getLatestComments","Comments","setComments","getPopularRooms","Rooms","rooms","setRooms","userCount","Panel","Collapse","Home","collapse","bordered","defaultActiveKey","header","Rooms_Rooms","Comments_Comments","Danmus_Danmus","Home_Users_Users","TabPane","Tabs","Tab","tab","activeTab","conversationUser","setCoversationUser","tab_context","Provider","tabs","activeKey","Home_Home","forceRender","containers_Chat","Comment_Comment","containers_Inbox_Inbox","Account_Account","OtherProfile_OtherProfile","require","loadingFromStorage","navigator","userLanguage","language","locale","config","top","duration","maxCount","interceptors","response","use","errorMessage","status","Promise","reject","locationUpdate","newUrl","newTitle","prevProps","snapshot","defaults","headers","common","account_context","containers_Tab_Tab","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"+sBAceA,EAdF,CAGXC,WAAY,wCACZC,YAAa,wBAEbC,UAAW,2BAIXC,MAAO,+BCVLC,EAAOC,OAAOC,SAASC,OAAOC,UAAU,GAM/BC,EAAS,WACpB,OAAOL,GAGIM,EAAY,WACvB,IACIC,EAoBN,SAAyBC,GACvB,IAAIC,EAIFA,EADED,EAAIE,QAAQ,OAAS,EACZF,EAAIG,MAAM,KAAK,GAEfH,EAAIG,MAAM,KAAK,GAQ5B,OAFAF,GAFAA,EAAWA,EAASE,MAAM,KAAK,IAEXA,MAAM,KAAK,GAjClBC,CADDP,KAEVQ,EAAWN,EAAOI,MAAM,KACxBG,EAASD,EAASE,OAepB,OAXID,EAAS,IACXP,EAASM,EAASC,EAAS,GAAK,IAAMD,EAASC,EAAS,GAGtB,IAAhCD,EAASC,EAAS,GAAGC,QACW,IAAhCF,EAASC,EAAS,GAAGC,SAGrBR,EAASM,EAASC,EAAS,GAAK,IAAMP,IAGnCA,GC7BT,IAAIS,EAAS,KAEAC,EAAe,WAC1B,OAAOD,GCELE,EAAU,KAERC,EAAU,CACdC,QAAS,KAKTC,OAAQf,KAQV,IAAMgB,EAAgB,CACpBC,YAAa,SAAAC,GACXN,EAAQO,KAAK,cAAeD,IAE9BE,eAAgB,SAAAC,GACdT,EAAQO,KAAK,cAAeE,IAM9BC,QAAS,SAAAR,GAEP,GADAD,EAAQC,QAAUA,EACdF,EAOF,OANAW,QAAQC,MAAM,0CACVZ,EAAQa,UACVF,QAAQG,KAAK,8BAEbd,EAAQU,WAIVC,QAAQC,MAAM,+BAEhBZ,EAAUe,EAAGtC,EAAKG,UAAW,CAAEoC,KAAM,gBAE7BC,GAAG,cAAe,SAAAR,GACxBE,QAAQC,MAAMH,GAEdA,EAAKS,KAAOT,EAAKU,OAAOC,aAAenB,EAAQC,QAAQmB,GAAGD,WAC1DX,EAAKa,KAAO,OACRb,EAAKc,QAAQC,WAAW,eAC1Bf,EAAKa,KAAO,WAEdb,EAAKgB,QAAUhB,EAAKc,QACpBd,EAAKiB,OAASjB,EAAKU,OACnBV,EAAKkB,KAAOlB,EAAKmB,SACbnB,EAAKoB,YACPpB,EAAKqB,UAAYrD,EAAKC,WAAa+B,EAAKiB,OAAS,QA5CzD,SAAoBH,GAClB,IAAMQ,EAAW,CACfzB,IAAKiB,GAEPxC,OAAOiD,OAAOC,YAAYF,EAAU,KA0ChCG,CAAWzB,GACP0B,EAAcC,UAChBD,EAAcC,UAAU3B,GAExBE,QAAQG,KAAK,2BAGjBd,EAAQiB,GAAG,cAAe,SAAAR,GAGpB0B,EAAcE,WAChBF,EAAcE,WAAW5B,GAEzBE,QAAQG,KAAK,4BAGjBd,EAAQiB,GAAG,YAAa,SAAAR,GAElB0B,EAAcG,WAChBH,EAAcG,WAAW7B,GAEzBE,QAAQG,KAAK,4BAGjBd,EAAQiB,GAAG,aAAc,SAAAR,GACvBE,QAAQC,MAAM,cACVuB,EAAcI,eAChBJ,EAAcI,eAAe9B,GAE7BE,QAAQG,KAAK,gCAGjBd,EAAQiB,GAAG,QAAS,SAAAR,GAClBE,QAAQC,MAAM,uBAAyBX,EAAQC,QAAQmB,IACnDc,EAAcK,YAChBL,EAAcK,YAAY/B,GAE1BE,QAAQG,KAAK,2BAGfd,EAAQO,KAAK,QAAS,CACpBqB,SAAU3B,EAAQC,QAAQyB,KAC1BD,OAAQzB,EAAQC,QAAQmB,GACxBlB,OAAQF,EAAQE,OAChBb,IAAKH,IACLsD,QAAS,QACTC,KAAM,KACNC,UAAW5C,IACX6C,MAAO3C,EAAQC,QAAQ0C,WAI7BC,eAAgB,SAAA1C,GAMdF,EAAQE,OAASA,EACbgC,EAAcW,aAChBX,EAAcW,aAAa3C,GAE3BQ,QAAQG,KAAK,4BAEfd,EAAQ+C,aACRC,WAAW,WACThD,EAAQU,WACP,MAELqC,WAAY,WACN/C,EACEA,EAAQa,WACVF,QAAQC,MAAM,qBACdZ,EAAQ+C,cAERpC,QAAQG,KAAK,+CAGfH,QAAQG,KAAK,2CAINqB,EAAgB,GACd/B,aC5IA6C,EAFIC,IAAMC,gBCInBC,EAAa,CACjBC,WAAY,QACZC,SAAU,QACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,OACPC,SAAU,OACVC,UAAW,MACXC,QAAS,EACTC,WAAY,GACZC,aAAc,uBAsCDC,MAnCf,SAAeC,GACb,IAAMC,EAAaC,qBAAWjB,GAExBkB,GAASH,EAAMG,OAAS,IAAIC,IAAI,SAAAC,GAWpC,OARIA,EAAKA,MAAQA,EAAKA,KAAKC,MAEzBD,EAAKvC,UAAYuC,EAAKA,KAAKvC,UAEvBuC,EAAKxC,YACPwC,EAAKvC,UAAYrD,EAAKC,WAAa2F,EAAK3C,OAAS,QAInD6C,EAAAC,EAAAC,cAAA,OACEC,UAAU,iBACVC,QAAS,kBAAMV,EAAWW,gBAAgBP,IAC1CQ,IAAKR,EAAK3C,QAEV6C,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,MAAOV,EAAKzC,SACZoD,KAAM,GACNC,MAAM,SACNC,KAAK,OACLC,IAAKd,EAAKvC,YAEZyC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BL,EAAKzC,aAKrD,OAAO2C,EAAAC,EAAAC,cAAA,OAAKW,MAAOhC,GAAae,IC/CnBkB,EAFQnC,IAAMC,gBC6GdmC,MAlGf,SAAoBtB,GAAO,IAAAuB,EACQC,oBAAS,GADjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClBK,EADkBH,EAAA,GACPI,EADOJ,EAAA,GAAAK,EAKDN,mBAASpG,KALR2G,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAKlBE,EALkBD,EAAA,GAKZE,EALYF,EAAA,GAAAG,EAMCV,mBAAS,IANVW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAMlB/B,EANkBgC,EAAA,GAMXC,EANWD,EAAA,GAOnBd,EAAiBnB,qBAAWmC,GAC5BpC,EAAaC,qBAAWjB,GAE9BqD,oBAAU,WAoBR,OAnBA3F,QAAQ4F,IAAI,oCACZpE,EAAcE,WAAa,SAAA5B,GACzB2F,EAAS3F,EAAK+F,cAEhBrE,EAAcG,WAAa,SAAA7B,GACzB2F,EAAS3F,EAAK+F,cAEhBrE,EAAcW,aAAe,SAAAkD,GAC3BC,EAAQD,IAEVjH,OAAO0H,iBACL,UACA,SAAAC,GACMA,EAAEC,SAAWlI,EAAKE,aACpByH,EAASM,EAAEjG,QAGf,GAEK,WACL0B,EAAcE,WAAa,KAC3BF,EAAcG,WAAa,OAG5B,IAEH,IAAIb,EACF8C,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAAS,WACPV,EAAW4C,UAAU,YAEvB7B,KAAK,QACL1D,KAAK,WALP,uBAwDJ,OA7CI+D,EAAenF,UACjBuB,EACE8C,EAAAC,EAAAC,cAAA,WASEF,EAAAC,EAAAC,cAACqC,EAAA,EAAMC,MAAP,CACErC,UAAU,2BACVM,KAAK,QACLgC,MAAOhB,EACPiB,YAAY,QACZC,SAAU,SAAAR,GACR,IAAMS,EAAMT,EAAEU,OAAOJ,MAErB5G,EAAcyC,eAAesE,KAG/B5C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAASC,UAAU,SAASvC,MAAM,YAChCR,EAAAC,EAAAC,cAACqC,EAAA,EAAMS,OAAP,CAAcP,MAAM,SAApB,iBAEFzC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAASC,UAAU,SAASvC,MAAO3F,KACjCmF,EAAAC,EAAAC,cAACqC,EAAA,EAAMS,OAAP,CAAcP,MAAO5H,KAArB,iBAEFmF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAASC,UAAU,SAASvC,MAAO5F,KACjCoF,EAAAC,EAAAC,cAACqC,EAAA,EAAMS,OAAP,CAAcP,MAAO7H,KAArB,kBAIJoF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACExB,MAAO,CAAEoC,OAAQ,OAAQlE,SAAU,WAAYmE,MAAO,GACtD9C,QAAS,kBAAMkB,GAAaD,IAC5BZ,KAAK,QACLE,KAAK,QAELX,EAAAC,EAAAC,cAAA,QAAMW,MAAO,CAAEsC,WAAY,IAAMvD,EAAMtE,SAExC+F,GAAarB,EAAAC,EAAAC,cAACkD,EAAD,CAAOxD,MAAOA,MAI3BI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBjD,mBCzF7BmG,MAff,SAAqB5D,GACnB,IAAMvD,EAAOuD,EAAMvD,KACfgB,EAAUhB,EAAKgB,QACfiD,EAAY,mBAAqBjE,EAAKa,KAC1C,GAAkB,YAAdb,EAAKa,KAAoB,CAE3B,IAAIuG,EAASpG,EACT1C,OAAO+I,QAAU/I,OAAO+I,OAAOC,YACjCF,EAAS9I,OAAO+I,OAAOC,UAAUC,OAAO,SAAWvG,IAErDA,EAAU8C,EAAAC,EAAAC,cAAA,OAAKwD,IAAKJ,EAAQ1C,IAAK0C,IAEnC,OAAOtD,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GAAYjD,aCd7ByG,EAASC,IAATD,KAEFE,EAAa,CACjBC,QAAS,eACT5E,MAAO,OACP6E,WAAY,SACZ5E,SAAU,SACV6E,aAAc,WACdC,UAAW,OACXC,aAAc,GAsEhB,SAASC,EAAwB1E,GAC/B,OACEO,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQE,KAAM,GAAIG,IAAKnB,EAAMmB,IAAKD,KAAK,UAM9ByD,MA5Ef,SAAqB3E,GAAO,IAClBK,EAA8DL,EAA9DK,KAAMuE,EAAwD5E,EAAxD4E,UAAWC,EAA6C7E,EAA7C6E,cAAeC,EAA8B9E,EAA9B8E,WAAYC,EAAkB/E,EAAlB+E,cAC9CC,EACJzE,EAAAC,EAAAC,cAAA,WACGJ,EAAK4E,OAAS1E,EAAAC,EAAAC,cAAA,OAAKW,MAAOgD,GAAa/D,EAAK4E,OAE5CL,GACCrE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE1B,KAAK,cACLF,KAAK,QACLL,QAAS,SAAA+B,GACPA,EAAEwC,kBAEFJ,GAAW,KANf,6BAYAF,GACArE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE1B,KAAK,WACL5D,KAAK,UACL0D,KAAK,QACLL,QAAS,SAAA+B,GACPA,EAAEwC,kBACFJ,GAAW,KANf,gBAaFvE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAAS,SAAA+B,GACPA,EAAEwC,kBACFH,EAAc1E,IAEhBa,KAAK,OACLE,MAAO,CAAEsC,WAAY,IACrB1C,KAAK,SAPP,iBAcEmE,EACJ5E,EAAAC,EAAAC,cAACiE,EAAD,CACEG,cAAeA,EACf1D,IAAKd,EAAKvC,YAId,OACEyC,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACEzE,QAAS,SAAA+B,GACPA,EAAEwC,mBAEJlE,KAAK,QACLI,MAAO,CAAE3B,MAAO,IAAKC,SAAU,WAE/Ba,EAAAC,EAAAC,cAACyD,EAAD,CAAMiB,OAAQA,EAAQpE,MAAOV,EAAK1C,KAAM0H,YAAaL,cCxE9CM,EAAU,SAAA5H,GACrB,OAAO6H,IAAMC,IAAN,GAAAC,OAAahL,EAAKI,MAAlB,iBAAA4K,OAAuC/H,KAGnCgI,EAAiB,WAC5B,OAAOH,IAAMC,IAAN,GAAAC,OAAahL,EAAKI,MAAlB,0BAGI8K,EAAa,SAAAC,GACxB,IAAMC,EAAW,IAAIC,SAIrB,OAHAD,EAASE,OAAO,OAAQH,EAAQjI,MAChCkI,EAASE,OAAO,QAASH,EAAQX,OACjCY,EAASE,OAAO,SAAUH,EAAQT,OAAQ,UACnCI,IAAMS,KAAKvL,EAAKI,MAAQ,eAAgBgL,ICPlCI,EANY,CACzBC,OAAQ,WACNvJ,QAAQ4F,IAAI,wBCFHuC,EAAa,SAAAzH,GACxB,IAAMuI,EAAU,CACdvI,GAAIA,GAEN,OAAOkI,IAAMS,KAAN,GAAAP,OAAchL,EAAKI,MAAnB,kBAA0C+K,ICoFpCO,OApFf,SAAqBnG,GAKnB,IAAMqB,EAAiBnB,qBAAWmC,GAC5BpC,EAAaC,qBAAWjB,GANJsC,EAQFC,mBAASxB,EAAMK,MARboB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAQnBlB,EARmBoB,EAAA,GAQb2E,EARa3E,EAAA,GAAAK,EASgBN,mBAAS,IATzBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GASnB+C,EATmB9C,EAAA,GASJsE,EATItE,EAAA,GAAAG,EAUQV,oBAAS,GAVjBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAUnB0C,EAVmBzC,EAAA,GAURmE,EAVQnE,EAAA,GAAAoE,EAWI/E,oBAAS,GAXbgF,EAAA9E,OAAAC,EAAA,EAAAD,CAAA6E,EAAA,GAWnBE,EAXmBD,EAAA,GAWVE,EAXUF,EAAA,GAAAG,EAYEnF,oBAAS,GAZXoF,EAAAlF,OAAAC,EAAA,EAAAD,CAAAiF,EAAA,GAYnBE,EAZmBD,EAAA,GAYXE,EAZWF,EAAA,GAepBG,EAAOC,QAAQhH,EAAM+G,MAc3B,SAASE,EAAaf,GACpBI,EAAaJ,GAEXG,EADEH,EACerB,EAAgB,EAEhBA,EAAgB,GAGnCC,EAAWzE,EAAKhD,IACb6J,KAAK,SAAAC,IArBV,SAAgCjB,GAG9B,IAAMkB,EAAc1F,OAAA2F,EAAA,EAAA3F,CAAA,GAAQL,EAAenF,SACvCgK,EACFkB,EAAeE,iBAEfF,EAAeE,iBAEjBjG,EAAekG,WAAWH,GAatBI,CAAuBtB,GACvBD,EAAmBC,OAAOA,EAAQ7F,KAEnCoH,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,KAEfR,KAAK,cAGV5E,oBAAU,WACJyE,GAAQF,IACZH,GAAW,GACXpB,EAAQjF,EAAKhD,IACV6J,KAAK,SAAAC,GACJxK,QAAQC,MAAMuK,EAAK1K,MACnB,IAAMmL,EAAWT,EAAK1K,KACtBqK,GAAU,GACVV,EAAQwB,GACRtB,EAAasB,EAAShD,WACtByB,EAAiBuB,EAAS/C,iBAE3B4C,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,KAEfR,KAAK,WACJvK,QAAQ4F,IAAI,gBACZmE,GAAW,OAEd,CAACK,EAAMF,IAEV,IAAMgB,EAAoB3I,IAAM4I,SAAS1H,IAAIJ,EAAM+H,SAAU,SAAAC,GAAK,OAChE9I,IAAM+I,aAAaD,EAAnBtG,OAAA2F,EAAA,EAAA3F,CAAA,GACKsG,EAAMhI,MADX,CAEEyG,QAASA,EACTI,OAAQA,EACRxG,KAAMA,EACNwE,cAAeA,EACfD,UAAWA,EACXE,WAAYmC,EACZlC,cAAe9E,EAAW8E,mBAG9B,OAAOxE,EAAAC,EAAAC,cAAA,YAAOoH,yBCjChB,SAASK,GAAclI,GACrB,IAAIkB,EAAO,OACPC,EAAMnB,EAAMmB,IAMhB,OALInB,EAAMyG,SAAWzG,EAAMmI,cACzBhH,EAAM,KACND,EAAO,WAIPX,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEI,KAAMA,EACNR,UAAWV,EAAMU,UACjBS,IAAKA,EACLH,KAAMhB,EAAMgB,KACZL,QAASX,EAAMW,QACfyH,aAAcpI,EAAMoI,aACpBC,aAAcrI,EAAMqI,eAK1B,SAASC,GAAQtI,GACf,IAAIuI,EAAa,SAIjB,OAHIvI,EAAM6G,SACR0B,EAAa,WAGbhI,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,CACEY,MAAO,CAAE7B,OAAQ,GAAIgJ,WAAYA,GACjCH,aAAc,SAAA1F,GACZ1C,EAAMyI,YAERJ,aAAcrI,EAAM0I,SACpBC,SAAU3I,EAAM2I,SAChBC,KAAM5I,EAAMmI,aAEZ5H,EAAAC,EAAAC,cAACoI,EAAgB7I,IAKR8I,OAxFf,SAA6B9I,GAC3B,IAAMK,EAAOL,EAAMK,KACbJ,EAAaC,qBAAWjB,GAFIsC,EAGJC,mBAAS,MAHLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAG3BoH,EAH2BlH,EAAA,GAGjBsH,EAHiBtH,EAAA,GAK5B0G,EAAcnB,QAAQ2B,GACxBK,EAAgB,EACpB,SAASN,IACPO,aAAaD,GACbA,EAAgBhK,WAAW,WACzB+J,EAAU,OACT,KAEL,SAASN,EAASS,GAChBD,aAAaD,GACTE,GACFH,EAAUG,GAId,OACE3I,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0I,GAAD,CAAapC,MAAOoB,EAAa9H,KAAMA,GACrCE,EAAAC,EAAAC,cAACyH,GAAD,CACEhH,KAAK,OACLR,UAAWV,EAAMU,UACjBS,IAAKd,EAAKvC,UACVkD,KAAMhB,EAAMgB,KACZL,QAAS,kBAAMV,EAAWW,gBAAgBP,IAC1C+H,aAAc,SAAA1F,GACZ/F,QAAQ4F,IAAI,sBACZkG,EAAS/F,EAAE0G,gBAEbf,aAAcK,EACdP,YAAaA,IAEf5H,EAAAC,EAAAC,cAAC6H,GAAD,CACEG,SAAUA,EACVC,SAAUA,EACVP,YAAaA,EACbQ,SAAUA,OClCdU,GAAgB,CACpBC,SAAU,UACVC,cAAe,SACf7F,WAAY,EACZ8F,YAAa,GA0DAC,OAvDf,SAAqBzJ,GACnB,IAAMvD,EAAOuD,EAAMvD,KAEb4D,EAAO,CACXhD,GAAIZ,EAAKiB,OACTC,KAAMlB,EAAKkB,KACXT,KAAMT,EAAKS,KACXY,UAAWrB,EAAKqB,WAGd4L,EAAgB,KAChBlF,EAAY,OAEZW,EAAS5E,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQE,KAAK,QAAQE,KAAK,OAAOC,IAAKd,EAAKvC,YA+BxD,OA9BKuC,EAAKnD,MAAQ8C,EAAM2J,gBACtBxE,EACE5E,EAAAC,EAAAC,cAACmJ,GAAD,CACElJ,UAAU,yBACVM,KAAK,QACLX,KAAMA,KAKRA,EAAKnD,MACPsH,EAAY,QACZkF,EACEnJ,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEyI,UAAW,KACvBtJ,EAAAC,EAAAC,cAAA,QAAMW,MAAOiI,IAAgBhJ,EAAK1C,MACjCwH,IAILuE,EACEnJ,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEyI,UAAW,KACtB1E,EACD5E,EAAAC,EAAAC,cAAA,QAAMW,MAAOiI,IAAgBhJ,EAAK1C,OAIpCqC,EAAM8J,aACRJ,EAAgBnJ,EAAAC,EAAAC,cAAA,cAIhBF,EAAAC,EAAAC,cAAA,OACEC,UAAWL,EAAKnD,KAAO,OAAS,QAChCkE,MAAO,CAAEoD,UAAWA,IAEnBkF,EACDnJ,EAAAC,EAAAC,cAACsJ,EAAD,CAAatN,KAAMA,MCpEnBuN,GAAgB,CACpBC,OAAQ,qBACRC,UAAW,OACXC,UAAW,SACX1K,MAAO,OACPH,SAAU,QACVD,WAAY,UACZO,QAAS,GACTwK,cAAe,IAEXC,GAAgC,IAChCC,eACJ,SAAAA,EAAYtK,GAAO,IAAAuK,EAAA,OAAA7I,OAAA8I,EAAA,EAAA9I,CAAA+I,KAAAH,IACjBC,EAAA7I,OAAAgJ,EAAA,EAAAhJ,CAAA+I,KAAA/I,OAAAiJ,EAAA,EAAAjJ,CAAA4I,GAAAM,KAAAH,KAAMzK,KAkBR6K,2BAA6B,SAAAC,GAC3BA,EAAUA,GAAW,IACrB,IAAMC,EAAUR,EAAKS,QAAQC,QAE3BF,EAAQG,aAAeH,EAAQI,UAAYJ,EAAQK,aACnDf,IAEArL,WAAW,WACT+L,EAAQI,UAAYJ,EAAQG,cAC3BJ,IA5BYP,EA+BnBc,OAAS,SAAA/O,GACPiO,EAAKe,SAAS,SAACC,EAAOvL,GAAR,MAAmB,CAC/BwL,SAAQ,GAAA/F,OAAA/D,OAAA+J,EAAA,EAAA/J,CAAM6J,EAAMC,UAAZ,CAAsBlP,QA/BhCiO,EAAKgB,MAAQ,CAAEC,SAAUxL,EAAMvD,MAAQ,IACvC8N,EAAKS,QAAU9L,IAAMwM,YAErB3Q,OAAO4Q,qBAAuBpB,EAAKc,OALlBd,mFAQC,IAAAqB,EAAAnB,KAClB9N,QAAQ4F,IAAI,gCACZpE,EAAcC,UAAY,SAAA3B,GACxBmP,EAAKN,SAAS,SAACC,EAAOvL,GAAR,MAAmB,CAC/BwL,SAAQ,GAAA/F,OAAA/D,OAAA+J,EAAA,EAAA/J,CAAM6J,EAAMC,UAAZ,CAAsB/O,OAEhC,IAAIqO,EAAU,GACI,YAAdrO,EAAKa,OAAoBwN,EAAU,KACvCc,EAAKf,2BAA2BC,qCAsBlC,IAAIU,EAAW,GACXK,EAAU,KACVC,EAAQ,EAmBZ,OAlBarB,KAAKc,MAAMC,SAGnBO,QAAQ,SAAAzP,GACX,IAAIwN,GAAa,EACb+B,GAAWA,EAAQnO,SAAWpB,EAAIoB,SACpCoM,GAAa,GAEf0B,EAASQ,KACPzL,EAAAC,EAAAC,cAACwL,GAAD,CACEtC,eAAe,EACf9I,IAAKiL,IACLrP,KAAMH,EACNwN,WAAYA,KAGhB+B,EAAUvP,IAGViE,EAAAC,EAAAC,cAAA,OAAKyL,IAAKzB,KAAKO,QAAS5J,MAAO4I,IAC5BwB,UA9DctM,IAAMiN,WAmE7B7B,GAAS8B,YAAc/J,EC7CvB,ID+CeiI,uEErCA+B,eA5Cb,SAAAA,EAAYrM,GAAO,IAAAuK,EAAA,OAAA7I,OAAA8I,EAAA,EAAA9I,CAAA+I,KAAA4B,IACjB9B,EAAA7I,OAAAgJ,EAAA,EAAAhJ,CAAA+I,KAAA/I,OAAAiJ,EAAA,EAAAjJ,CAAA2K,GAAAzB,KAAAH,KAAMzK,KAEDsM,cAAgB/B,EAAK+B,cAAcC,KAAnB7K,OAAA8K,GAAA,EAAA9K,QAAA8K,GAAA,EAAA9K,CAAA6I,KACrBA,EAAKkC,mBAAqBlC,EAAKkC,mBAAmBF,KAAxB7K,OAAA8K,GAAA,EAAA9K,QAAA8K,GAAA,EAAA9K,CAAA6I,KAJTA,mFAQjBmC,SAASjK,iBAAiB,YAAagI,KAAKgC,mEAI5CC,SAASC,oBAAoB,YAAalC,KAAKgC,0DAMnCG,GACZnC,KAAKoC,WAAaD,6CAMDE,GAGfA,EAAM1J,OAAO1C,WACboM,EAAM1J,OAAO1C,UAAUlF,SACvBsR,EAAM1J,OAAO1C,UAAUlF,QAAQiP,KAAKzK,MAAM+M,iBAAmB,GAG3DtC,KAAKoC,aAAepC,KAAKoC,WAAWG,SAASF,EAAM1J,UACrDqH,KAAKzK,MAAMiN,QACXH,EAAMI,gBAAiB,oCAKzB,OAAO3M,EAAAC,EAAAC,cAAA,OAAKyL,IAAKzB,KAAK6B,eAAgB7B,KAAKzK,MAAM+H,iBAzCxB7I,IAAMiN,WDM7BgB,GAAO,CACXlS,OAAQ,eACRmS,MAAO,eACPC,SAAU,qBACVC,SAAU,gCACVC,WAAY,CACVtS,OAAQ,2BACRuS,OAAQ,eACRC,OAAQ,eACRC,OAAQ,qBACRC,MAAO,eACPC,SAAU,eACVC,OAAQ,eACRC,QAAS,eACTC,QAAS,eACTC,MAAO,eACPC,OAAQ,sBAEVC,gBAAiB,mBACjBC,UAAW,CACTC,EAAG,oBACHC,EAAG,kBACHC,EAAG,yBACHC,EAAG,mBACHC,EAAG,wBACHC,EAAG,mBAGDC,GAAe,GACZC,GAAI,EAAGA,IAAK,GAAIA,KAAK,CAC5B,IAAMC,GAAQ,sBAAAnJ,OAAyBkJ,GAAzB,QACdD,GAAa1C,KAAK,CAChBrO,KAAM,aAAegR,GACrBE,YAAa,CAAC,aAAeF,IAC7BC,SAAUA,KAmBCE,OAff,SAAe9O,GACb,OACEO,EAAAC,EAAAC,cAACsO,GAAD,CAAchC,eAAgB/M,EAAM+M,eAAgBE,MAAOjN,EAAMiN,OAC/D1M,EAAAC,EAAAC,cAACuO,GAAA,EAAD,CACE7B,KAAMA,GACN8B,cAAc,EACdC,QAAS,CAAC,SAAU,SAAU,SAAU,QAAS,WAAY,UAC7DjB,OAAQS,GACRS,SAAUnP,EAAMoP,SAChBC,IAAI,QACJC,aAAa,MEiCNC,OAlFf,SAAyBvP,GAAO,IAAAuB,EACJC,mBAAS,IADLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBiO,EADuB/N,EAAA,GAChBgO,EADgBhO,EAAA,GAExBiO,EAAWC,mBAFa7N,EAKIN,oBAAS,GALbO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAKvB8N,EALuB7N,EAAA,GAKZ8N,EALY9N,EAAA,GAAAG,EAMYV,oBAAS,GANrBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAMvB4N,EANuB3N,EAAA,GAMR4N,EANQ5N,EAAA,GAQxB6N,EAAUhQ,EAAMgQ,QACtB1N,oBAAU,WACH0N,GACHN,EAASzE,QAAQgF,SAElB,CAACD,IAEJ1N,oBAAU,WACRuN,EAAaC,IACZ,CAACA,IAEJ,IAwBMI,EACJ3P,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CACEzP,UAAU,cACVC,QAAS,SAAA+B,GACPqN,EAAiB,SAAAK,GACfL,GAAkBK,MAGtB9S,KAAK,UAIT,OACEiD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZoP,GAAiBvP,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM/O,MAAO,CAAEiP,OAAQ,IAAM/S,KAAK,YACnDsS,GACCrP,EAAAC,EAAAC,cAAC6P,GAAD,CACElB,SAhCS,SAAAmB,GACXA,EAAMtC,QACRjO,EAAMwQ,KAAKD,EAAM3B,UACjBmB,GAAiB,IAEjBN,EAAS,SAAAD,GACP,OAAOA,EAAQe,EAAME,SAGzBf,EAASzE,QAAQgF,SAwBXlD,eAAe,cACfE,MAAO,WACL8C,GAAiB,MAIvBxP,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,CACExE,IAAKwD,EACL1O,KAAK,QACL2P,UAnDgB,SAAAjO,GACN,UAAVA,EAAE7B,MACJkP,GAAiB,GACG/P,EAAMwQ,KAAKhB,IAE7BC,EAAS,MA+CTzM,MAAOwM,EACPoB,YAAaV,EAEbhN,SAnCe,SAAAR,GACnB+M,EAAS/M,EAAEU,OAAOJ,QAmCd6N,SAAUb,EACVc,YAAad,EAAU,uCAAW,2CC1EpCe,GAAmB,IACrBC,GAAc,EAkCHC,OAhCf,SAAgBjR,GACd,IACM9D,EADiBgE,qBAAWmC,GACHnG,QAoB3BuB,EACF8C,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAExB,QAAS,GAAIP,WAAY,cAA1C,4BAMF,OAJInD,IACFuB,EAAU8C,EAAAC,EAAAC,cAACyQ,GAAD,CAAiBV,KAtBhB,SAAAhB,GACX,IAAM2B,EAAM,IAAIC,KAChB,GAAID,EAAMH,GAAcD,GAAkB,CACxC,IAAIzU,EAAM,CACRA,IAAKkT,EAGL5R,SAAU1B,EAAQ0B,UAIpB,OAFAxB,EAAcC,YAAYC,GAC1B0U,GAAcG,GACP,EAGP,OADA5T,IAAQT,KAAK,mCACN,MAWJyD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBjD,ICzB3B4T,OAVf,SAAcrR,GACZ,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6Q,EAAD,MACA/Q,EAAAC,EAAAC,cAAC8Q,GAAD,MACAhR,EAAAC,EAAAC,cAAC+Q,GAAD,2BCTAC,GAASC,KAAOD,OAYPE,OAVf,SAAuB3R,GACrB,OACEO,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAChBH,EAAAC,EAAAC,cAACmR,GAAA,EAAD,CAAQ1O,SAAUlD,EAAM6R,QAAS7Q,KAAK,QAAQ8Q,aAAa,QACzDvR,EAAAC,EAAAC,cAACgR,GAAD,CAAQzO,MAAM,UAAd,kCACAzC,EAAAC,EAAAC,cAACgR,GAAD,CAAQzO,MAAM,QAAd,4CC4DO+O,OA9Df,SAAiB/R,GACf,IAAMvD,EAAOuD,EAAMvD,KACb4D,EAAO,CACXhD,GAAIZ,EAAKiB,OACTC,KAAMlB,EAAKkB,KACXG,UAAWrB,EAAKqB,UAChBZ,KAAMT,EAAKS,MANSqE,EASIC,mBAAS/E,EAAKuV,OATlBvQ,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GASfyQ,EATevQ,EAAA,GASRwQ,EATQxQ,EAAA,GAAAK,EAUIN,mBAAS/E,EAAKyV,OAVlBnQ,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAUfoQ,EAVenQ,EAAA,GAURoQ,EAVQpQ,EAAA,GAWhB7F,EAAUgE,qBAAWmC,GAAgBnG,QAM3C,OACEqE,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEyI,UAAW,IAAMnJ,UAAWjE,EAAKS,KAAO,OAAS,IAC7DqD,EAAAC,EAAAC,cAACmJ,GAAD,CAAqBlJ,UAAU,4BAA4BL,KAAMA,IACjEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEqD,aAAc,IAC1BlE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BAA+BjE,EAAKkB,MACpD4C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAA2BjE,EAAK2V,OAElD7R,EAAAC,EAAAC,cAAA,WAAMhE,EAAKgB,UACThB,EAAK4V,UACL9R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CACEmC,MAhBRJ,EAAc,UACX,WAgBKvR,QAAS,WACFzE,IAIL+V,EAAS,SAAAM,GACP,OAAIL,EAAcK,EAAY,EACvBA,EAAY,IAErBJ,EAAS,SAAA/B,GACP,OAAQA,IAEVpQ,EAAMwS,KAAK/V,EAAKY,MAElBC,KAAK,SAEPiD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAA4BsR,IAE9CzR,EAAAC,EAAAC,cAAA,QACEE,QAAS,kBAAMX,EAAMyS,MAAMhW,EAAKiB,OAAQjB,EAAKkB,OAC7C+C,UAAU,4BAFZ,oBC/BGgS,OArBf,SAAqB1S,GACnB,IAEI2S,GAFS3S,EAAMvD,MAAQ,IAEP2D,IAAI,SAAAwS,GACtB,OACErS,EAAAC,EAAAC,cAACoS,GAAD,CACEL,KAAMxS,EAAMwS,KACZC,MAAOzS,EAAMyS,MAEb5R,IAAK+R,EAAQvV,GACbZ,KAAMmW,MAQZ,OAJKD,EAAS9W,SACZ8W,EAAWpS,EAAAC,EAAAC,cAAA,2CAGNF,EAAAC,EAAAC,cAAA,WAAMkS,ICRTG,GAAQ,GAERC,GAAmB,CACvB9I,OAAQ,qBACRvK,SAAU,OACVD,MAAO,OACPH,SAAU,QACVD,WAAY,UACZO,QAAS,GACTwK,cAAe,IAGT4I,GAAaC,KAAbD,SAEFE,eACJ,SAAAA,EAAYlT,GAAO,IAAAuK,EAAA,OAAA7I,OAAA8I,EAAA,EAAA9I,CAAA+I,KAAAyI,IACjB3I,EAAA7I,OAAAgJ,EAAA,EAAAhJ,CAAA+I,KAAA/I,OAAAiJ,EAAA,EAAAjJ,CAAAwR,GAAAtI,KAAAH,KAAMzK,KAeRmT,QAAU,SAAAzQ,GACR6H,EAAKe,SAAS,CAAE8H,YAAY,KAjBX7I,EAoBnBkI,MAAQ,SAAC/U,EAAQE,GACf2M,EAAKe,SAAS,CAAE+H,QAASzV,EAAU0V,cAAe5V,IAClD6M,EAAKmF,SAASzE,QAAQgF,SAtBL1F,EAyBnBiI,KAAO,SAAAe,GACL,IAAM3N,EAAU,CACd4N,WAAYD,GAEdhO,IACGS,KAAKvL,EAAKI,MAAQ,uBAAwB+K,GAC1CsB,KAAK,SAAAuM,MACLhM,MAAM,SAAAC,MACNR,KAAK,eAjCSqD,EAoCnBmJ,OAAS,WACP,IAAM9N,EAAU,CACdtK,IAAKH,IACLsC,QAAS8M,EAAKgB,MAAMiE,MACpBmE,iBAAkBpJ,EAAKgB,MAAM+H,cAC7BM,mBAAoBrJ,EAAKgB,MAAM8H,SAGjC9I,EAAKe,SAAS,CAAEuI,YAAY,IAC5BtO,IACGS,KAAKvL,EAAKI,MAAQ,uBAAwB+K,GAC1CsB,KAAK,SAAAuM,GACJ,IAAIhW,EAAU8M,EAAKgB,MAAMiE,MACrBjF,EAAKgB,MAAM8H,UACb5V,EAAU,IAAM8M,EAAKgB,MAAM8H,QAAU,MAAQ5V,GAE/C,IAAMvB,EAAUqO,EAAKuJ,QAAQ5X,QACvB6X,EAAU,CACd1W,GAAI2W,KAAKC,OAAO,KAChBvW,OAAQxB,EAAQmB,GAChBS,UAAW5B,EAAQ4B,UACnBH,KAAMzB,EAAQyB,KACdyU,KAAM8B,MAASC,UACf1W,QAASA,EACTP,MAAM,EACNmV,UAAU,GAGZ9H,EAAKe,SAAS,CAAEqH,SAAU,CAACoB,GAAStO,OAAO8E,EAAKgB,MAAMoH,YACtDpI,EAAK6J,aACLpV,WAAW,WACTrC,QAAQC,MAAM,2BACd2N,EAAKS,QAAQC,QAAQE,UAAY,GAChC,OAEJ1D,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,KAEfR,KAAK,WACJqD,EAAKe,SAAS,CAAEuI,YAAY,OA3EftJ,EA8EnB8J,YAAc,SAAA3R,GACZ6H,EAAKe,SAAS,CAAEkE,MAAO9M,EAAEU,OAAOJ,SA/EfuH,EAiFnB6J,WAAa,WACX7J,EAAKe,SAAS,CACZkE,MAAO,GACP4D,YAAY,EACZC,QAAS,KACTC,cAAe,QAtFA/I,EAyFnBsH,QAAU,SAAA1O,GACRoH,EAAKe,SAAS,CAAEqH,SAAU,KAC1BpI,EAAK+J,OAAS,EACd/J,EAAKgK,MAAQpR,EACboH,EAAKiK,gBA7FYjK,EA+FnBkK,SAAW,WACTlK,EAAK+J,OAAS/J,EAAKgB,MAAMoH,SAAS9W,OAClC0O,EAAKiK,gBAjGYjK,EAmGnBiK,aAAe,WACbjK,EAAKe,SAAS,CAAE7E,SAAS,IACzB,IAAMb,EAAU,CACdtK,IAAKH,IACLmZ,OAAQ/J,EAAK+J,OACbI,MAAO5B,GACPyB,MAAOhK,EAAKgK,OAEdhP,IACGS,KAAKvL,EAAKI,MAAQ,uBAAwB+K,GAC1CsB,KAAK,SAAAuM,GACJA,EAAIhX,KAAKsP,QAAQ,SAAA6G,GACfA,EAAQR,KAAO8B,IAAOS,IAAI/B,EAAQgC,SAAST,YAE7C5J,EAAKe,SAAS,CAAEqH,SAAUpI,EAAKgB,MAAMoH,SAASlN,OAAOgO,EAAIhX,UAE1DgL,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,KAEfR,KAAK,WACJqD,EAAKe,SAAS,CAAE7E,SAAS,OArH7B8D,EAAKgB,MAAQ,CACX9E,SAAS,EACToN,YAAY,EACZlB,SAAU,GACVnD,MAAO,GACP4D,YAAY,EACZC,QAAS,GACTC,cAAe,IAEjB/I,EAAKmF,SAAWxQ,IAAMwM,YACtBnB,EAAKS,QAAU9L,IAAMwM,YACrBnB,EAAK+J,OAAS,EACd/J,EAAKgK,MAAQ,OAdIhK,mFA2HjBE,KAAK+J,gDAIL,IAAIK,EAAS,EACTpK,KAAKc,MAAM6H,aACbyB,EAAS,GAEX,IAAI/D,EAAc,iCACdrG,KAAKc,MAAM8H,UACbvC,EAAc,IAAMrG,KAAKc,MAAM8H,SAEjC,IAAIrO,EACFzE,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAExB,QAAS,GAAIP,WAAY,cAA1C,4BAmCF,OAjCIoL,KAAKqJ,QAAQ5X,UACf8I,EACEzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuS,GAAD,CACEhS,KAAK,QACLgC,MAAOyH,KAAKc,MAAMiE,MAClB2D,QAAS1I,KAAK0I,QACdjQ,SAAUuH,KAAK4J,YACfvD,YAAaA,EACbgE,KAAMD,EACN3I,IAAKzB,KAAKiF,WAEXjF,KAAKc,MAAM6H,YACV7S,EAAAC,EAAAC,cAAA,OACEW,MAAO,CACL3B,MAAO,OACP+E,UAAW,UAGbjE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQjC,QAAS8J,KAAK2J,YAAtB,gBACA7T,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAAS8J,KAAKiJ,OACdtS,MAAO,CAAEiP,OAAQ,IACjB/S,KAAK,UACLmJ,QAASgE,KAAKc,MAAMsI,YAJtB,mBAcRtT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsU,GAAD,CAAQlD,QAASpH,KAAKoH,UACtBtR,EAAAC,EAAAC,cAAA,OAAKyL,IAAKzB,KAAKO,QAAS5J,MAAO2R,IAC5BtI,KAAKc,MAAM9E,SAA0C,IAA/BgE,KAAKc,MAAMoH,SAAS9W,QACzC0E,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,eAGZmN,KAAKc,MAAM9E,SAAWgE,KAAKc,MAAMoH,SAAS9W,OAAS,IACpD0E,EAAAC,EAAAC,cAACuU,GAAD,CACEvY,KAAMgO,KAAKc,MAAMoH,SACjBH,KAAM/H,KAAK+H,KACXC,MAAOhI,KAAKgI,QAGfhI,KAAKc,MAAMoH,SAAS9W,OAAS,GAC5B0E,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAEyI,UAAW,KAE1BtJ,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE6D,QAASgE,KAAKc,MAAM9E,QACpBnJ,KAAK,UACLqD,QAAS8J,KAAKgK,UAHhB,iCAUNlU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBsE,WAzMnB9F,IAAMiN,WA+M/B+G,GAAW9G,YAAc/J,EAEV6Q,oBCzOF+B,GAAa,WACxB,OAAO1P,IAAMC,IAAN,GAAAC,OAAahL,EAAKI,MAAlB,qBAEIqa,GAAQ,SAACxX,EAAQyX,GAC5B,IAAMvP,EAAU,CACdlI,OAAQA,EACRyX,SAAUA,GAEZ,OAAO5P,IAAMS,KAAKvL,EAAKI,MAAQ,gBAAiB+K,IAErCwP,GAAS,WACpB,OAAO7P,IAAMS,KAAKvL,EAAKI,MAAQ,mBAQpBwa,GAAgB,SAAAF,GAC3B,IAAMvP,EAAU,CACduP,SAAUA,GAEZ,OAAO5P,IAAMS,KAAKvL,EAAKI,MAAQ,yBAA0B+K,ICtBrD0P,8MACJ/J,MAAQ,CACNgK,cAAc,KAGhBC,aAAe,SAAA9S,GACbA,EAAE+S,iBACFlL,EAAKvK,MAAM0V,KAAKC,wBAAwB,SAACjO,EAAKkO,GACvClO,IACH2N,GAAcO,EAAOT,UAClBjO,KAAK,WACJ3J,IAAQsY,QAAQ,oCAEjBpO,QACAP,OACHvK,QAAQ4F,IAAI,4BAA6BqT,SAK/CE,kBAAoB,SAAApT,GAClB,IAAMM,EAAQN,EAAEU,OAAOJ,MACvBuH,EAAKe,SAAS,CAAEiK,aAAchL,EAAKgB,MAAMgK,gBAAkBvS,OAG7D+S,uBAAyB,SAACC,EAAMhT,EAAOiT,GACrC,IAAMP,EAAOnL,EAAKvK,MAAM0V,KACpB1S,GAASA,IAAU0S,EAAKQ,cAAc,YACxCD,EAAS,+CAETA,OAIJE,uBAAyB,SAACH,EAAMhT,EAAOiT,GACrC,IAAMP,EAAOnL,EAAKvK,MAAM0V,KACpB1S,GAASuH,EAAKgB,MAAMgK,cACtBG,EAAKU,eAAe,CAAC,WAAY,CAAEC,OAAO,IAE5CJ,6EAGO,IACCK,EAAsB7L,KAAKzK,MAAM0V,KAAjCY,kBAyBR,OACE/V,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAAS8J,KAAKzK,MAAMuW,KACpBnV,MAAO,CACL9B,SAAU,QACVuK,UAAW,EACXnG,WAAY,EACZF,OAAQ,OACR8F,SAAU,SAEZpI,KAAK,eAEPX,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIW,MAAO,CAAEyI,UAAW,GAAIpF,aAAc,KAA1C,6BACQ,IACVlE,EAAAC,EAAAC,cAAC+V,GAAA,EAAD9U,OAAA+U,OAAA,CACErV,MAAO,CAAE3B,MAAO,MAAO4Q,OAAQ,SAxCd,CACrBqG,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAgCZ,CAGEG,SAAUtM,KAAK+K,eAEfjV,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KAAN,CAAWC,MAAM,sBACdX,EAAkB,WAAY,CAC7BY,MAAO,CACL,CACEC,UAAU,EACV5Z,QAAS,+BAEX,CACE6Z,UAAW3M,KAAK0L,0BAPrBG,CAUE/V,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,CAAOpT,KAAK,eAEjBiD,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KAAN,CAAWC,MAAM,4BACdX,EAAkB,UAAW,CAC5BY,MAAO,CACL,CACEC,UAAU,EACV5Z,QAAS,iCAEX,CACE6Z,UAAW3M,KAAKsL,0BAPrBO,CAUE/V,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,CAAOpT,KAAK,WAAW+Z,OAAQ5M,KAAKqL,sBAGzCvV,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KA7De,CACzBF,WAAY,CACVH,GAAI,CACFC,KAAM,GACNtC,OAAQ,GAEVuC,GAAI,CACFD,KAAM,GACNtC,OAAQ,KAsDN/T,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE5B,KAAK,QACLI,MAAO,CAAEoI,YAAa,IACtB7I,QAAS8J,KAAKzK,MAAMuW,MAHtB,gBAQAhW,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQ5B,KAAK,QAAQ1D,KAAK,UAAUga,SAAS,UAA7C,0BA7HoBpY,IAAMiN,WA0IvBoL,GAHkBC,KAAKC,OAAO,CAAE9Z,KAAM,iBAApB6Z,CAC/BlC,yBC9FaoC,uBA1Cb,SAAAA,EAAY1X,GAAO,IAAAuK,EAAA,OAAA7I,OAAA8I,EAAA,EAAA9I,CAAA+I,KAAAiN,IACjBnN,EAAA7I,OAAAgJ,EAAA,EAAAhJ,CAAA+I,KAAA/I,OAAAiJ,EAAA,EAAAjJ,CAAAgW,GAAA9M,KAAAH,KAAMzK,KACDuL,MAAQ,CAAEoM,SAAU,IACzBpN,EAAKqN,OAASrN,EAAKqN,OAAOrL,KAAZ7K,OAAA8K,GAAA,EAAA9K,QAAA8K,GAAA,EAAA9K,CAAA6I,KAHGA,sEAMZsN,GACLlb,QAAQ4F,IAAIsV,GACZpN,KAAKa,SAAS,CACZqM,SAAUE,IAEZpN,KAAKzK,MAAM8X,QAAQD,EAAQ,qCAM3B,IAAIE,EAAgC,GAKpC,OAJItN,KAAKc,MAAMoM,SAAS9b,SACtBkc,EAAgC,sBAIhCxX,EAAAC,EAAAC,cAACuX,GAAAxX,EAAD,CACEE,UAAWqX,EACXE,aAAa,EACbC,gBAAgB,UAChBC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,WAAW,2BACXC,cAAc,6CACdC,cAAc,2BACdtV,SAAUuH,KAAKmN,OACfX,MAAM,0CACNwB,aAAc,CAAC,OAAQ,QAAS,OAAQ,QACxCC,YAAa,iBArCHxZ,IAAMiN,YCIpBwM,GAAa,KACXC,8MACJrN,MAAQ,CACNsI,YAAY,KAGd2B,aAAe,SAAA9S,GACbA,EAAE+S,iBACFlL,EAAKvK,MAAM0V,KAAKC,wBAAwB,SAACjO,EAAKkO,GACvClO,IACH/K,QAAQ4F,IAAI,4BAA6BqT,GACzCjZ,QAAQ4F,IAAIoW,IACZ/C,EAAOzQ,OAASwT,GAChBpO,EAAKe,SAAS,CAAEuI,YAAY,IAE5BlO,EAAWiQ,GACR1O,KAAK,SAAAC,GACJ5J,IAAQsY,QAAQ,kCAChBtL,EAAKvK,MAAMuH,WAAWJ,EAAK1K,QAE5BgL,MAAM,SAAAC,MACNR,KAAK,WACJqD,EAAKe,SAAS,CAAEuI,YAAY,kFAM7B,IACCyC,EAAsB7L,KAAKzK,MAAM0V,KAAjCY,kBACFpa,EAAUuO,KAAKzK,MAAM9D,QAyB3B,OACEqE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAAS8J,KAAKzK,MAAMuW,KACpBnV,MAAO,CACL9B,SAAU,QACVuK,UAAW,EACXnG,WAAY,EACZF,OAAQ,OACR8F,SAAU,SAEZpI,KAAK,eAEPX,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIW,MAAO,CAAEyI,UAAW,GAAIpF,aAAc,KAA1C,6BACQ,IACVlE,EAAAC,EAAAC,cAAC+V,GAAA,EAAD9U,OAAA+U,OAAA,CACErV,MAAO,CAAE3B,MAAO,MAAO4Q,OAAQ,SAxCd,CACrBqG,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAgCZ,CAGEG,SAAUtM,KAAK+K,eAEfjV,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KAAN,CAAWC,MAAM,4BACdX,EAAkB,SAAU,CAC3BuC,cAAe,WACfC,kBAAmB,WACjB,OAAOH,KAHVrC,CAMC/V,EAAAC,EAAAC,cAACsY,GAAD,CACEjB,QAAS,SAAAkB,GACPL,GAAaK,OAKrBzY,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KAAN,CAAWC,MAAO1W,EAAAC,EAAAC,cAAA,mCACf6V,EAAkB,OAAQ,CACzBY,MAAO,CACL,CACE3Z,QAAS,6CACT0b,YAAY,IAGhBC,aAAchd,EAAQyB,MAPvB2Y,CAQE/V,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,QAgBLnQ,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KAAN,CAAWC,MAAO1W,EAAAC,EAAAC,cAAA,yCACf6V,EAAkB,QAAS,CAC1B4C,aAAchd,EAAQ+I,OADvBqR,CAEE/V,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,QAELnQ,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KA9Ee,CACzBF,WAAY,CACVH,GAAI,CACFC,KAAM,GACNtC,OAAQ,GAEVuC,GAAI,CACFD,KAAM,GACNtC,OAAQ,KAuEN/T,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE5B,KAAK,QACLI,MAAO,CAAEoI,YAAa,IACtB7I,QAAS8J,KAAKzK,MAAMuW,MAHtB,gBAOAhW,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE6D,QAASgE,KAAKc,MAAMsI,WACpBvW,KAAK,UACL0D,KAAK,QACLsW,SAAS,UAJX,0BA/HkBpY,IAAMiN,WAkJrBgN,GAJgB3B,KAAKC,OAAO,CAAE9Z,KAAM,gBAApB6Z,CAC7BoB,+BCjJIQ,GAAc,CAClB/I,OAAQ,OACRxG,UAAW,GACXxF,QAAS,SAELgV,GAAmB,CACvBpP,OAAQ,oBACRC,UAAW,OACXC,UAAW,SACX1K,MAAO,OACPH,SAAU,QAEVM,QAAS,GACTC,WAAY,GACZuK,cAAe,IAEXhG,GAAa,CACjBC,QAAS,eACTiV,SAAU,IACVC,SAAU,IACVzZ,aAAc,sBACd0E,UAAW,OACX9E,SAAU,OACVC,UAAW,GACXC,QAAS,EACT4Z,YAAa,GACbC,aAAc,GACdC,UAAW,cAoFEC,OAjFf,SAAiB3Z,GACf,IAAM9D,EAAU8D,EAAM9D,QADAqF,EAEcC,oBAAS,GAFvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEfqY,EAFenY,EAAA,GAEHoY,EAFGpY,EAAA,GAItB,OACElB,EAAAC,EAAAC,cAAA,OAAKW,MAAOiY,IACV9Y,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEM,MAAOgY,GACPpY,KAAM,IACNG,IAAKjF,EAAQ4B,UACboD,KAAK,SAEPX,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAEiP,OAAQ,GAAI/G,SAAU,QAASwQ,WAAY,SACzD5d,EAAQyB,MAEX4C,EAAAC,EAAAC,cAACsZ,GAAA,EAAD,CAAKC,OAAQ,GAAI5Y,MAAO,CAAEoD,UAAW,WACnCjE,EAAAC,EAAAC,cAACwZ,GAAA,EAAD,CAAK7Y,MAAO,CAAEoD,UAAW,SAAWoS,KAAM,IAA1C,OACO1a,EAAQoE,OAEfC,EAAAC,EAAAC,cAACwZ,GAAA,EAAD,CAAK7Y,MAAO,CAAEoD,UAAW,QAAUoS,KAAM,IAAzC,iBACO1a,EAAQge,SAGjB3Z,EAAAC,EAAAC,cAACsZ,GAAA,EAAD,CAAKC,OAAQ,GAAI5Y,MAAO,CAAEoD,UAAW,WACnCjE,EAAAC,EAAAC,cAACwZ,GAAA,EAAD,CAAK7Y,MAAO,CAAEoD,UAAW,SAAWoS,KAAM,IACxCrW,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBC,QAASX,EAAMma,gBAAjD,uBACQje,EAAQoL,iBAGlB/G,EAAAC,EAAAC,cAACwZ,GAAA,EAAD,CAAK7Y,MAAO,CAAEoD,UAAW,QAAUoS,KAAM,IACvCrW,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBC,QAASX,EAAMoa,eAAjD,uBACQle,EAAQ2I,iBAIpBtE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKW,MAAOgD,IAAalI,EAAQ+I,OACjC1E,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEyI,UAAW,KACvBtJ,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEtF,KAAK,UACL4D,KAAK,OACLE,MAAO,CAAEiP,OAAQ,IACjBrP,KAAK,QACLL,QAASX,EAAMqa,iBALjB,6BAUF9Z,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQjC,QAASX,EAAMsa,kBAAmBlZ,MAAO,CAAEiP,OAAQ,KAA3D,4BAGA9P,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAAS,WACPkZ,GAAc,GAEdzE,KACGlO,KAAK,SAAAuM,GACJ9W,QAAQC,MAAM,oBAEf6K,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,KAEfR,KAAK,WACJ2S,GAAc,GACd7Z,EAAMuH,WAAW,SAGvBd,QAASmT,EACTtc,KAAK,SACL8D,MAAO,CAAEiP,OAAQ,KAlBnB,0BC+EOkK,OA/Jf,SAAgBva,GAAO,IAAAuB,EACqBC,mBAASxB,EAAMoa,eADpC3Y,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACd6Y,EADc3Y,EAAA,GACC+Y,EADD/Y,EAAA,GAAAK,EAESN,oBAAS,GAFlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEd2E,EAFc1E,EAAA,GAEL2E,EAFK3E,EAAA,GAAAG,EAGiBV,oBAAS,GAH1BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGduY,EAHctY,EAAA,GAGDuY,EAHCvY,EAAA,GAAAoE,EAIK/E,mBAAS,IAJdgF,EAAA9E,OAAAC,EAAA,EAAAD,CAAA6E,EAAA,GAIdpG,EAJcqG,EAAA,GAIPpE,EAJOoE,EAAA,GAKfvG,EAAaC,qBAAWjB,GAExB/C,EADiBgE,qBAAWmC,GACHnG,QACzBye,EAAWhL,iBAAO,IAExBrN,oBAAU,WAIR,GAHAF,EAAS,IACTwY,EAAU,IAELR,EAaH,OAZAzd,QAAQC,MAAM,2BACdqJ,EAAmBC,OAAS,SAACpB,EAAYzE,GACvC1D,QAAQ4F,IAAI,qBACZ,IAAIsY,EAAe,GAIjBA,EAHG/V,EAGS,CAAIzE,GAAJoF,OAAA/D,OAAA+J,EAAA,EAAA/J,CAAaiZ,EAAS1P,UAFnB0P,EAAS1P,QAAQ6P,OAAO,SAAAC,GAAC,OAAIA,EAAE1d,KAAOgD,EAAKhD,KAI5D+E,EAASyY,IAGJ,WACLle,QAAQC,MAAM,6BACdqJ,EAAmBC,OAAS,WAC1BvJ,QAAQC,MAAM,sCAInB,CAACwd,IAEJ9X,oBAAU,WACRqY,EAAS1P,QAAU9K,GAClB,CAACA,IAaJ,IAAMya,EAAY,SAAAtG,GAChB,IAAIhZ,EAAMb,EAAKI,MAAQ,WAErBS,GADE8e,EACK,YAEA,aAET9e,GAAO,WAAagZ,EAEhBA,EACFoG,GAAe,GAEfhU,GAAW,GAEbnB,IACGC,IAAIlK,GACJ4L,KAAK,SAAAC,GAMJ/E,EAAS,SAAA4Y,GAAS,OAAIA,EAAUvV,OAAO0B,EAAK1K,UAE7CgL,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,KAEfR,KAAK,WACJR,GAAW,GACXgU,GAAe,MAIrB,OACEna,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAASX,EAAMuW,KACfnV,MAAO,CACL9B,SAAU,QACVuK,UAAW,EACXnG,WAAY,EACZF,OAAQ,OACR8F,SAAU,SAEZpI,KAAK,eAGPX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAChBH,EAAAC,EAAAC,cAACqC,EAAA,EAAMC,MAAP,CACErC,UAAU,2BACVM,KAAK,QACL8Q,aAAcsI,EACdnX,YAAY,QACZC,SAAU,SAAAR,GACR8X,EAAiB9X,EAAEU,OAAOJ,SAG5BzC,EAAAC,EAAAC,cAACqC,EAAA,EAAMS,OAAP,CAAcP,OAAO,GAArB,sBACO9G,EAAQoL,gBAEf/G,EAAAC,EAAAC,cAACqC,EAAA,EAAMS,OAAP,CAAcP,OAAO,GAArB,sBACO9G,EAAQ2I,iBAInBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZ+F,GACClG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CACE/O,MAAO,CACLyI,UAAW,GACXrG,OAAQ,OACR8F,SAAU,SAEZhM,KAAK,aAKV6C,EAAMC,IAAI,SAAAC,GAAI,OACbE,EAAAC,EAAAC,cAAA,OACEE,QAAS,kBAAMV,EAAWW,gBAAgBP,IAC1CK,UAAU,gBACVG,IAAKR,EAAKhD,IAGVkD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQI,KAAK,OAAOC,IAAKd,EAAKvC,YAC7BuC,EAAK1C,QAGV4C,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAEiP,OAAQ,KAlGR,IAAjBlQ,EAAMtE,SACNue,EACKja,EAAMtE,OAASmE,EAAM6E,cAErB1E,EAAMtE,OAASmE,EAAMsH,iBAgGtB/G,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE6D,QAASgU,EACTnd,KAAK,UACLqD,QAAS,WACPia,EAAUza,EAAMtE,UAJpB,mCC9FGof,GA5DC,CACdzV,IAAK,SAAC3E,EAAKoV,GACLlb,OAAO+I,QAAU/I,OAAO+I,OAAOmX,QACjClgB,OAAO+I,OAAOmX,QAAQC,MAAM1V,IAAI3E,EAAK,SAAAsa,GAEjClF,EADEpV,KAAOsa,EACAA,EAAKta,GAEL,QAITua,aAAaC,eAAexa,GAC9BoV,EAASqF,KAAKC,MAAMH,aAAaI,QAAQ3a,KAEzCoV,EAAS,OAIf5G,IAAK,SAACxO,EAAKmC,GACT,GAAIjI,OAAO+I,QAAU/I,OAAO+I,OAAOmX,QAAS,CAC1C,IAAIE,EAAO,GACXA,EAAKta,GAAOmC,EACZjI,OAAO+I,OAAOmX,QAAQC,MAAM7L,IAAI8L,OAC3B,CACL,IAAMM,EAAcH,KAAKI,UAAU1Y,GACnCoY,aAAaO,QAAQ9a,EAAK4a,GAG1B,IAAMG,EAAelP,SAASmP,YAAY,cAC1CD,EAAaE,UAAU,WAAW,GAAM,GACxCF,EAAaG,UAAY,UACzBH,EAAa/a,IAAMA,EACnB+a,EAAaI,SAAWP,EACxB1gB,OAAOkhB,cAAcL,KAGzBnZ,iBAAkB,SAAC5B,EAAKoV,GAClBlb,OAAO+I,QAAU/I,OAAO+I,OAAOmX,QACjClgB,OAAO+I,OAAOmX,QAAQiB,UAAUC,YAAY,SAACC,EAASC,GAChDxb,KAAOub,IACTzf,QAAQC,MAAMwf,EAAQvb,IACtBoV,EAASmG,EAAQvb,GAAR,aAIb9F,OAAO0H,iBAAiB,UAAW,SAAAmZ,GAO7BA,EAAa/a,MAAQA,GACvBoV,EAASqF,KAAKC,MAAMK,EAAaI,eC9CrCM,eACJ,SAAAA,EAAYtc,GAAO,IAAAuK,EAAA,OAAA7I,OAAA8I,EAAA,EAAA9I,CAAA+I,KAAA6R,IACjB/R,EAAA7I,OAAAgJ,EAAA,EAAAhJ,CAAA+I,KAAA/I,OAAAiJ,EAAA,EAAAjJ,CAAA4a,GAAA1R,KAAAH,KAAMzK,KAmDRuc,UAAY,SAAA3G,GACVrL,EAAKe,SAAS,CAAE7E,SAAS,IACzByO,GAAMU,EAAOlY,OAAQkY,EAAOT,UACzBjO,KAAK,SAAAuM,GACJ9W,QAAQC,MAAM6W,EAAIhX,MAClB,IAAMP,EAAUuX,EAAIhX,KACpB8N,EAAKe,SAAS,CAAE7E,SAAS,IACzB8D,EAAKvK,MAAMuH,WAAWrL,GACtBsgB,GAAenN,IAAI,QAASuG,KAE7BnO,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,GACd6C,EAAKe,SAAS,CAAE7E,SAAS,MAE1BS,KAAK,eAlESqD,EA0EnBiL,aAAe,SAAA9S,GACbA,EAAE+S,iBACFlL,EAAKvK,MAAM0V,KAAKU,eAAe,SAAC1O,EAAKkO,GACnCjZ,QAAQC,MAAM,4BAA6BgZ,GACtClO,GACH6C,EAAKgS,UAAU3G,MA7EnBrL,EAAKgB,MAAQ,CACX9E,SAAS,EAGTgW,aAAa,GANElS,mFAUC,IAAAqB,EAAAnB,KAClB+R,GAAehX,IAAI,QAAS,SAAAoQ,GAC1B,GAAIA,EACFjZ,QAAQC,MAAM,0BACdgP,EAAK5L,MAAM0V,KAAKgH,eAAe,CAC7Bhf,OAAQkY,EAAOlY,OACfyX,SAAUS,EAAOT,WAEfvJ,EAAKkI,QAAQ6I,YACf/Q,EAAK2Q,UAAU3G,GACfjZ,QAAQC,MAAM,mBAEX,CACLD,QAAQC,MAAM,2CACd,IAAMuY,EAAWnB,KAAKC,SACnB7W,SAAS,IACTwf,OAAO,GACVhR,EAAKN,SAAS,CAAEmR,aAAa,IPlBb,SAAAtH,GACtB,IAAMvP,EAAU,CACduP,SAAUA,GAEZ,OAAO5P,IAAMS,KAAKvL,EAAKI,MAAQ,mBAAoB+K,GOe7CiX,CAAS1H,GACNjO,KAAK,SAAAC,GACJyE,EAAKN,SAAS,CAAEmR,aAAa,IAC7B,IAAMvgB,EAAUiL,EAAK1K,KACrBmP,EAAK5L,MAAMuH,WAAWrL,GACtBsgB,GAAenN,IAAI,QAAS,CAC1B3R,OAAQxB,EAAQoE,MAChB6U,SAAUA,IAEZ5X,IAAQsY,QAAQ,+BAEjBpO,MAAM,SAAAC,GACLkE,EAAKN,SAAS,CAAEmR,aAAa,MAM9BvV,KAAK,cAEV0E,EAAKkI,QAAQgJ,mDAqCf,GAAIrS,KAAKc,MAAMkR,YACb,OACElc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAEyI,UAAW,QAA5B,0BAJC,IAQCyM,EAAsB7L,KAAKzK,MAAM0V,KAAjCY,kBACR,OACE/V,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACEpV,MAAO,CAAE3B,MAAO,MAAO4Q,OAAQ,OAAQxG,UAAW,KAClDkN,SAAUtM,KAAK+K,aACf9U,UAAU,cAEVH,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KAAN,KACGV,EAAkB,SAAU,CAC3BY,MAAO,CAAC,CAAEC,UAAU,EAAM5Z,QAAS,sCADpC+Y,CAGC/V,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,CACEqM,OACExc,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,OAAO8D,MAAO,CAAE4b,MAAO,qBAEpClM,YAAY,SAIlBvQ,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KAAN,KACGV,EAAkB,WAAY,CAC7BY,MAAO,CAAC,CAAEC,UAAU,EAAM5Z,QAAS,oCADpC+Y,CAGC/V,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,CACEqM,OACExc,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,OAAO8D,MAAO,CAAE4b,MAAO,qBAEpC1f,KAAK,WACLwT,YAAY,mBAIlBvQ,EAAAC,EAAAC,cAAC+V,GAAA,EAAKQ,KAAN,KACEzW,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEtF,KAAK,UACLga,SAAS,SACT5W,UAAU,oBACVU,MAAO,CAAEoI,YAAa,IACtB/C,QAASgE,KAAKc,MAAM9E,SALtB,0BA/HkBvH,IAAMiN,WAmJpCmQ,GAAgBlQ,YAAc/J,EAE9B,IAIe4a,GAJgBzF,KAAKC,OAAO,CAAE9Z,KAAM,gBAApB6Z,CAC7B8E,ICnEaY,OA/Ef,SAAiBld,GACf,IAAMqB,EAAiBnB,qBAAWmC,GAC5BnG,EAAUmF,EAAenF,QACzBqL,EAAalG,EAAekG,WAHZhG,EAK6BC,oBAAS,GALtCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAKf4b,EALe1b,EAAA,GAKI2b,EALJ3b,EAAA,GAAAK,EAM6BN,oBAAS,GANtCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAMfub,EANetb,EAAA,GAMEub,EANFvb,EAAA,GAAAG,EASyBV,oBAAS,GATlCW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GASfqb,EATepb,EAAA,GASAqb,EATArb,EAAA,GAAAoE,EAUyB/E,oBAAS,GAVlCgF,EAAA9E,OAAAC,EAAA,EAAAD,CAAA6E,EAAA,GAUf6T,EAVe5T,EAAA,GAUAiX,EAVAjX,EAAA,GAAAG,EAYsBnF,oBAAS,GAZ/BoF,EAAAlF,OAAAC,EAAA,EAAAD,CAAAiF,EAAA,GAYf+W,EAZe9W,EAAA,GAYC+W,EAZD/W,EAAA,GAatBtE,oBAAU,WAIJpG,IACFyhB,GAAkB,GAClBhhB,QAAQC,MAAM,wBACdqY,KACG/N,KAAK,SAAAC,GACJI,EAAWJ,EAAK1K,QAEjBgL,MAAM,SAAAC,MACNR,KAAK,WACJyW,GAAkB,OAGvB,IAEH,IAAMC,EAAiB,WAErBR,GAAsB,GACtBE,GAAwB,GACxBE,GAAsB,IAGxB,OAAKthB,EAKHqE,EAAAC,EAAAC,cAAA,WACGid,GAAkBnd,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQ1B,KAAK,UAAUR,UAAU,gBACnDyc,GAAqB5c,EAAAC,EAAAC,cAACod,GAAD,CAAetH,KAAMqH,IAC1CL,GACChd,EAAAC,EAAAC,cAACqd,GAAD,CACE1D,cAAeA,EACf9S,eAAgBpL,EAAQoL,eACxBzC,cAAe3I,EAAQ2I,cACvB0R,KAAMqH,IAGTP,GACC9c,EAAAC,EAAAC,cAACsd,GAAD,CACE7hB,QAASA,EACTqL,WAAYA,EACZgP,KAAMqH,IAGVrd,EAAAC,EAAAC,cAACud,GAAD,CACE9hB,QAASA,EACToe,kBAAmB8C,EACnB/C,gBAAiBiD,EACjBnD,eAAgB,WACdqD,GAAsB,GACtBC,GAAsB,IAExBrD,cAAe,WACboD,GAAsB,GACtBC,GAAsB,IAExBlW,WAAYA,KAlCThH,EAAAC,EAAAC,cAACwd,GAAD,CAAO1W,WAAYA,KC/CxB6R,GAAc,CAClB/I,OAAQ,OACRxG,UAAW,GACXxF,QAAS,SAGLD,GAAa,CACjBC,QAAS,eACTiV,SAAU,IACVC,SAAU,IACVzZ,aAAc,sBACd0E,UAAW,OACX9E,SAAU,OACVC,UAAW,GACXC,QAAS,EACT4Z,YAAa,GACbC,aAAc,GACdC,UAAW,cAwFEwE,OArFf,SAAqBle,GAAO,IAExB+E,EAOE/E,EAPF+E,cACA0B,EAMEzG,EANFyG,QACAI,EAKE7G,EALF6G,OACAxG,EAIEL,EAJFK,KACAuE,EAGE5E,EAHF4E,UACAC,EAEE7E,EAFF6E,cACAC,EACE9E,EADF8E,WAGF,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQM,MAAOgY,GAAapY,KAAM,IAAKG,IAAKd,EAAKvC,UAAWoD,KAAK,SACjEX,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAEiP,OAAQ,GAAI/G,SAAU,QAASwQ,WAAY,SACzDzZ,EAAK1C,KACL8I,GACClG,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CACE/O,MAAO,CACLiD,QAAS,QACTwF,UAAW,GACXrG,OAAQ,QAEVlG,KAAK,aAIVuJ,GACCtG,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsZ,GAAA,EAAD,CAAKC,OAAQ,GAAI5Y,MAAO,CAAEoD,UAAW,WACnCjE,EAAAC,EAAAC,cAACwZ,GAAA,EAAD,CAAK7Y,MAAO,CAAEoD,UAAW,SAAWoS,KAAM,IAA1C,OACOvW,EAAKC,OAEZC,EAAAC,EAAAC,cAACwZ,GAAA,EAAD,CAAK7Y,MAAO,CAAEoD,UAAW,QAAUoS,KAAM,IAAzC,uBACQ/R,IAGVtE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKW,MAAOgD,IAAa/D,EAAK4E,OAC9B1E,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEyI,UAAW,KACtBjF,GACCrE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE1B,KAAK,cACLE,MAAO,CAAEiP,OAAQ,IACjBrP,KAAK,QACLL,QAAS,WACPmE,GAAW,KALf,6BAWAF,GACArE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEtF,KAAK,UACL4D,KAAK,WACLE,MAAO,CAAEiP,OAAQ,IACjBrP,KAAK,QACLL,QAAS,WACPmE,GAAW,KANf,gBAaFvE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAAS,WACPoE,EAAc1E,IAEhBa,KAAK,OACLE,MAAO,CAAEiP,OAAQ,IACjBrP,KAAK,SANP,qBC7DCmd,OAvBf,SAAsBne,GACpB,IAAKA,EAAMvD,KAAM,OAAO8D,EAAAC,EAAAC,cAAA,aAExB,IAAMJ,EAAO,CACXvC,UAAWkC,EAAMvD,KAAKqB,UACtBH,KAAMqC,EAAMvD,KAAKkB,KACjBN,GAAI2C,EAAMvD,KAAKiB,QAAUsC,EAAMvD,KAAKY,IAGtC,OACEkD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,QAAS,kBAAMX,EAAMY,mBACrBF,UAAU,cACVQ,KAAK,eAEPX,EAAAC,EAAAC,cAAC0I,GAAD,CAAa9I,KAAMA,GACjBE,EAAAC,EAAAC,cAAC2d,GAAD,CAAYrZ,cAAe/E,EAAM+E,4BCnB5BsZ,kBAAc,SAAA/J,GACzB,IAAMgK,EAAS,CACbhK,OAAQA,GAEV,OAAO/O,IAAMC,IAAN,GAAAC,OAAahL,EAAKI,MAAlB,oBAA2C,CAChDyjB,OAAQA,MAICrgB,GAAc,SAACP,EAAQD,EAAS6W,GAC3C,IAAM1O,EAAU,CACdlI,OAAQA,EACRD,QAASA,EACT6W,OAAQA,GAEV,OAAO/O,IAAMS,KAAN,GAAAP,OAAchL,EAAKI,MAAnB,mBAA2C+K,ICR9C2Y,GAAwB,CAC5BtU,OAAQ,qBACRvK,SAAU,OACVD,MAAO,OACPH,SAAU,QACVD,WAAY,UACZO,QAAS,GACTwK,cAAe,IAGXC,GAAgC,IAsGvBmU,OApGf,SAAsBxe,GACpB,IAAM9D,EAAUgE,qBAAWmC,GAAgBnG,QACrC+D,EAAaC,qBAAWjB,GACxBuM,EAAWxL,EAAMye,aAAajT,SAC9BkT,EAAQ1e,EAAMye,aAAape,KAC3BiU,EAAStU,EAAMsU,OALM/S,EAMGC,oBAAS,GANZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMpByO,EANoBvO,EAAA,GAMXkd,EANWld,EAAA,GAOrBuJ,EAAU2E,mBAEZ9D,EAAU,KACR+S,EAAOpT,EAASpL,IAAI,SAAA9D,GACxBA,EAAIuiB,KAAOviB,EAAImB,QACXnB,EAAIY,MACNZ,EAAIqB,KAAOzB,EAAQyB,KACnBrB,EAAIwB,UAAY5B,EAAQ4B,UACxBxB,EAAIoB,OAASxB,EAAQmB,KAErBf,EAAIqB,KAAO+gB,EAAM/gB,KACjBrB,EAAIwB,UAAY4gB,EAAM5gB,UACtBxB,EAAIoB,OAASghB,EAAMrhB,IAErB,IAAIyM,GAAa,EAGjB,OAFI+B,GAAWA,EAAQnO,SAAWpB,EAAIoB,SAAQoM,GAAa,GAC3D+B,EAAUvP,EACHiE,EAAAC,EAAAC,cAACwL,GAAD,CAASpL,IAAKvE,EAAIe,GAAIZ,KAAMH,EAAKwN,WAAYA,MA8CtD,OA5CAxH,oBAAU,WACR,IAAMyI,EAAUC,EAAQC,QACxBF,EAAQI,UAAYJ,EAAQG,cAC3B,IAEH5I,oBAAU,WAER,GADA3F,QAAQC,MAAM,oBACV4O,GAAYA,EAAS3P,OAAQ,CAC/B,IACIiP,EAAU,GACO,YAFLU,EAASA,EAAS3P,OAAS,GAE/ByB,OACVwN,EAAU,KAKhB,SAAoCA,GAClCA,EAAUA,GAAW,IACrB,IAAMC,EAAUC,EAAQC,QAEtBF,EAAQG,aAAeH,EAAQI,UAAYJ,EAAQK,aACnDf,IAEArL,WAAW,WACT+L,EAAQI,UAAYJ,EAAQG,cAC3BJ,GAZHD,CAA2BC,KAE5B,CAACU,IA8BFjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQjC,QAASX,EAAMuW,KAAM7V,UAAU,cAAcQ,KAAK,eAC1DX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,cAIEF,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,QACEC,UAAU,2BACVC,QAAS,kBAAMV,EAAWW,gBAAgB8d,KAEzCA,EAAM/gB,MANX,wBAYJ4C,EAAAC,EAAAC,cAAA,OAAKyL,IAAKlB,EAAS5J,MAAOmd,IACvBK,GAGHre,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACyQ,GAAD,CAAiBlB,QAASA,EAASQ,KAzCzC,SAAchB,GAaZ,OAZAmP,GAAW,GACX1gB,GAAYygB,EAAMrhB,GAAImS,EAAO8E,GAC1BpN,KAAK,SAAAC,GACJnH,EAAM8e,6BAA6B3X,EAAK1K,QAGzCgL,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,KAEfR,KAAK,WACJyX,GAAW,MAER,QCmJII,OAnOf,SAAe/e,GACb,IAAMK,EAAOL,EAAMK,KACb+F,EAAUpG,EAAMoG,QAChBlK,EAAUgE,qBAAWmC,GAAgBnG,QACvC8iB,EAAa,SACb9iB,IAAS8iB,GAAc9iB,EAAQmB,IACnC,IAAM4hB,EAAiBtP,mBANHpO,EAOsBC,mBAAS,IAP/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAOb2d,EAPazd,EAAA,GAOE0d,EAPF1d,EAAA,GAAAK,EAQ8BN,oBAAS,GARvCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAQbsd,EARard,EAAA,GAQMsd,EARNtd,EAAA,GAAAG,EAUUV,oBAAS,GAVnBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAUbuE,EAVatE,EAAA,GAUJuE,EAVIvE,EAAA,GAWhBmd,EAAuB,KA0B3B,SAASR,EAA6BS,GAEpC/C,GAAehX,IAAIwZ,EAAY,SAAAE,GAC7BA,EAAgBA,GAAiB,GACjCxd,OAAO8d,KAAKD,GAAkBxT,QAAQ,SAAArO,GACP,IAAA+hB,EAAzB/hB,KAAUwhB,IACZO,EAAAP,EAAcxhB,GAAQ8N,UAASQ,KAA/B0T,MAAAD,EAAA/d,OAAA+J,EAAA,EAAA/J,CACK6d,EAAiB7hB,GAAQ8N,WAG9B0T,EAAcxhB,GAAQ2C,KAAOkf,EAAiB7hB,GAAQ2C,MAEtD6e,EAAcxhB,GAAU6hB,EAAiB7hB,KAG7C8e,GAAenN,IAAI2P,EAAYE,KAGnC,SAASS,EAAUT,GACjB,IAAI5K,EAAS,EAOb,OANA5S,OAAOkU,OAAOsJ,GAAenT,QAAQ,SAAA6T,GAC/BA,EAAEpU,SAAS3P,SACb+jB,EAAE/T,QAAU+T,EAAEpU,SAASoU,EAAEpU,SAAS3P,OAAS,GAC3CyY,EAASN,KAAK6L,IAAIvL,EAAQsL,EAAE/T,QAAQxO,OAGjCiX,EAnDLjU,IACEA,EAAKhD,MAAM6hB,EACbI,EAAuBJ,EAAc7e,EAAKhD,KAE1CiiB,EAAuB,CACrBjf,KAAMA,EACNmL,SAAU,IAEZ2T,EAAiBzd,OAAA2F,EAAA,EAAA3F,CAAA,GAAKwd,EAANxd,OAAAoe,GAAA,EAAApe,CAAA,GAAsBrB,EAAKhD,GAAKiiB,OA8CpDhd,oBAAU,aAKP,IAEHA,oBAAU,WAkBJpG,EACG+iB,EAAehU,UAElBtO,QAAQC,MAAM,wCACd4f,GAAehX,IAAIwZ,EAAY,SAAAE,GAxErC,IAA+B5K,EA0EvB6K,EADAD,EAAgBA,GAAiB,IAEjCviB,QAAQC,MAAM,kDA3ES0X,EA4EDqL,EAAUT,GA3EtCxY,GAAW,GACX2X,GAAY/J,GACTpN,KAAK,SAAAC,GAEJ2X,EAA6B3X,EAAK1K,QAEnCgL,MAAM,SAAAC,GACL/K,QAAQgL,MAAMD,KAEfR,KAAK,WACJR,GAAW,OAmEX/J,QAAQC,MAAM,mCAId4f,GAAe/Z,iBAAiBuc,EAAY,SAAAE,GAC1CviB,QAAQC,MAAM,2BACduiB,EAAiBD,OAIrBviB,QAAQC,MAAM,sBACdwJ,EAAQ,MACR+Y,EAAiB,KAInBF,EAAehU,QAAU/O,GACxB,CAACA,IAMJ,IAAM6jB,EAAqBre,OAAO8d,KAAKN,GAAe9e,IAAI,SAAA1C,GACxD,IAAMkiB,EAAIV,EAAcxhB,GAQxB,OAPIkiB,EAAEpU,SAAS3P,QACb+jB,EAAE/T,QAAU+T,EAAEpU,SAASoU,EAAEpU,SAAS3P,OAAS,GAC3C+jB,EAAExN,KAAO8B,IAAOS,IAAIiL,EAAE/T,QAAQ+I,UAG9BgL,EAAExN,KAAO8B,IAAOS,MAEXiL,IAGTG,EAAmBC,KAAK,SAACxf,EAAGyf,GAC1B,OAAOA,EAAE7N,KAAO5R,EAAE4R,OAGpB,IAAI0C,EAAOiL,EAAmB3f,IAAI,SAAAwf,GAChC,IAAMvf,EAAOuf,EAAEvf,KACf,OACEE,EAAAC,EAAAC,cAAA,OACEE,QAAS,WACPyF,EAAQ/F,IAEVQ,IAAKR,EAAKhD,GACVqD,UAAU,gBAEVH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQI,KAAK,OAAOC,IAAKd,EAAKvC,YAC9ByC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,WACGJ,EAAK1C,KACLiiB,EAAE/T,SACDtL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBkf,EAAExN,KAAK+B,YAG7CyL,EAAE/T,SACDtL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBkf,EAAE/T,QAAQpO,aAUzD,OAJkC,IAA9BsiB,EAAmBlkB,SACrBiZ,EAAOvU,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAEiP,OAAQ,KAAzB,6BAGJnU,EAQHqE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZ4e,IAAyBF,GACxB7e,EAAAC,EAAAC,cAACyf,GAAD,CACE3J,KAAM,WACJnQ,EAAQ,OAEVkO,OAAQqL,EAAUT,GAClBT,aAAca,EACdR,6BAA8BA,KAGhCQ,GACA/e,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBACf+F,GACClG,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CACE/O,MAAO,CACLiP,OAAQ,EACR/Q,SAAU,WACVE,KAAM,GACNgE,OAAQ,OACR8F,SAAU,SAEZhM,KAAK,YAGTiD,EAAAC,EAAAC,cAACqC,EAAA,EAAMC,MAAP,CACE/B,KAAK,QACL8Q,aAAcsN,EACdnc,YAAY,QACZC,SAAU,SAAAR,GACR2c,EAAqB3c,EAAEU,OAAOJ,SAGhCzC,EAAAC,EAAAC,cAACqC,EAAA,EAAMS,OAAP,CAAcP,OAAO,GAArB,gBACAzC,EAAAC,EAAAC,cAACqC,EAAA,EAAMS,OAAP,CAAcP,OAAO,GAArB,kBAGJzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcU,MAAO,CAAEgJ,cAAe,MACjDgV,GAAqBtK,EACtBsK,GACC7e,EAAAC,EAAAC,cAAA,UAAQW,MAAO,CAAEiP,OAAQ,KAAzB,+BA/CR9P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAlB,wCClLKyf,GAAkB,WAC7B,OAAO5a,IAAMC,IAAN,GAAAC,OAAahL,EAAKI,MAAlB,2BC2CMulB,OA1Cf,SAAgBpgB,GAAO,IAAAuB,EACSC,oBAAS,GADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdkF,EADchF,EAAA,GACLiF,EADKjF,EAAA,GAAAK,EAEON,mBAAS,IAFhBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEdue,EAFcte,EAAA,GAENue,EAFMve,EAAA,GAarB,OAVAO,oBAAU,WACR6d,KACGjZ,KAAK,SAAAC,GACJmZ,EAAUnZ,EAAK1K,QAEhBgL,MAAM,SAAAC,MACNR,KAAK,WACJR,GAAW,MAEd,IACCD,EAEAlG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,aAIV+iB,EAAOjgB,IAAI,SAAAmgB,GAAK,OACrBhgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBG,IAAK0f,EAAMljB,IAC1CkD,EAAAC,EAAAC,cAAA,KACEC,UAAU,iBACV0C,OAAO,SACPod,IAAI,sBACJC,KAAMF,EAAMjlB,KAEXilB,EAAMjlB,KAETiF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACmJ,GAAD,CACElJ,UAAU,oBACVM,KAAK,QACLX,KAAMkgB,EAAMlgB,OAEdE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAsB6f,EAAM9iB,cCtCvCijB,WAAoB,WAC/B,OAAOnb,IAAMC,IAAN,GAAAC,OAAahL,EAAKI,MAAlB,8BCwDM8lB,OApDf,SAAkB3gB,GAAO,IAAAuB,EACOC,oBAAS,GADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChBkF,EADgBhF,EAAA,GACPiF,EADOjF,EAAA,GAAAK,EAESN,mBAAS,IAFlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEhB6Q,EAFgB5Q,EAAA,GAEN6e,EAFM7e,EAAA,GAavB,OAVAO,oBAAU,WACRoe,KACGxZ,KAAK,SAAAC,GACJyZ,EAAYzZ,EAAK1K,QAElBgL,MAAM,SAAAC,MACNR,KAAK,WACJR,GAAW,MAEd,IACCD,EAEAlG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,aAGVqV,EAASvS,IAAI,SAAAwS,GAAO,OACzBrS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBG,IAAK+R,EAAQvV,IAC5CkD,EAAAC,EAAAC,cAAA,KACEC,UAAU,iBACV0C,OAAO,SACPod,IAAI,sBACJC,KAAM7N,EAAQtX,KAEbsX,EAAQtX,KAEXiF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACmJ,GAAD,CACElJ,UAAU,oBACVM,KAAK,QACLX,KAAMuS,EAAQvS,OAEhBE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAsBkS,EAAQnV,qBCNvCsC,OA9Bf,SAAeC,GAAO,IAAAuB,EACUC,oBAAS,GADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbkF,EADahF,EAAA,GACJiF,EADIjF,EAAA,GAAAK,EAGMN,mBAAS,IAHfO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGb3B,EAHa4B,EAAA,GAGNK,EAHML,EAAA,GAcpB,OAVAO,oBAAU,WACRoD,IACGwB,KAAK,SAAAC,GACJ/E,EAAS+E,EAAK1K,QAEfgL,MAAM,SAAAC,MACNR,KAAK,WACJR,GAAW,MAEd,IACCD,EAEAlG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,aAGV6C,EAAMC,IAAI,SAAAC,GAAI,OACnBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBG,IAAKR,EAAKhD,IACvCkD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmJ,GAAD,CAAqBlJ,UAAU,oBAAoBL,KAAMA,IACzDE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeL,EAAK1C,WC5B/BkjB,GAAkB,WAC7B,OAAOtb,IAAMC,IAAN,GAAAC,OAAahL,EAAKG,UAAlB,wBCwDMkmB,OAtDf,SAAe9gB,GAAO,IAAAuB,EACUC,oBAAS,GADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbkF,EADahF,EAAA,GACJiF,EADIjF,EAAA,GAAAK,EAEMN,mBAAS,IAFfO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEbif,EAFahf,EAAA,GAENif,EAFMjf,EAAA,GAGd9B,EAAaC,qBAAWjB,GAY9B,OAVAqD,oBAAU,WACRue,KACG3Z,KAAK,SAAAC,GACJ6Z,EAAS7Z,EAAK1K,QAEfgL,MAAM,SAAAC,MACNR,KAAK,WACJR,GAAW,MAEd,IACCD,EAEAlG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,aAGVyjB,EAAM3gB,IAAI,SAAA4B,GACf,IAAI7F,EAAS6F,EAAK7F,OAClB,MAAe,UAAXA,EAEAoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBG,IAAK1E,GACpCoE,EAAAC,EAAAC,cAAA,OACEC,UAAU,iBACVC,QAAS,WACPV,EAAW4C,UAAU,QACrBzG,EAAcyC,eAAe,WAJjC,6BAOSmD,EAAKif,UAPd,MAcJ1gB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBG,IAAK1E,GACpCoE,EAAAC,EAAAC,cAAA,KACEC,UAAU,iBACV8f,IAAI,sBACJpd,OAAO,SACPqd,KAAMze,EAAK1G,KAEV0G,EAAKjB,MANR,KAMiBiB,EAAKif,UANtB,SCvCFC,GAAQC,KAASD,MA2BRE,OAzBf,SAAcphB,GACZ,OACEO,EAAAC,EAAAC,cAAC4gB,GAAA,EAAD,CACEC,UAAU,EACV5gB,UAAU,iBACV6gB,iBAAkB,CAAC,iBACnBre,SAAU,SAAArC,MAEVN,EAAAC,EAAAC,cAACygB,GAAD,CAAOM,OAAO,iCAAQ3gB,IAAI,iBACxBN,EAAAC,EAAAC,cAACghB,GAAD,OAGFlhB,EAAAC,EAAAC,cAACygB,GAAD,CAAOM,OAAO,uCAAS3gB,IAAI,mBACzBN,EAAAC,EAAAC,cAACihB,GAAD,OAEFnhB,EAAAC,EAAAC,cAACygB,GAAD,CAAOM,OAAO,uCAAS3gB,IAAI,iBACzBN,EAAAC,EAAAC,cAACkhB,GAAD,OAEFphB,EAAAC,EAAAC,cAACygB,GAAD,CAAOM,OAAO,qBAAM3gB,IAAI,aACtBN,EAAAC,EAAAC,cAACmhB,GAAD,SCfFC,GAAUC,IAAKD,QA2GNE,OAzGf,SAAa/hB,GACXrD,QAAQ4F,IAAI,cADM,IAAAhB,EAGaC,mBAASxB,EAAMgiB,KAH5BvgB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGX0gB,EAHWxgB,EAAA,GAGAoB,EAHApB,EAAA,GAAAK,EAKeN,qBALfO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAKX4c,EALW3c,EAAA,GAKJnB,EALImB,EAAA,GAAAG,EAO6BV,qBAP7BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAOXggB,EAPW/f,EAAA,GAOOggB,EAPPhgB,EAAA,GAclB,OACE5B,EAAAC,EAAAC,cAAC2hB,EAAWC,SAAZ,CACErf,MAAO,CACLpC,gBAAiBA,EACjBiC,UAAWA,EACXkC,cAXN,SAAuB1E,GACrBO,EAAgB,MAChBiC,EAAU,SACVsf,EAAmB9hB,MAWjBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC6hB,EAAA,EAAD,CACEpf,SAAU,SAAAC,GAGG,YAAPA,GAIJN,EAAUM,GACVvC,EAAgB,OAJd7F,OAAOiD,OAAOC,YAAY,WAAY,MAM1CskB,UAAWN,EACX3kB,KAAK,QAELiD,EAAAC,EAAAC,cAACohB,GAAD,CACEG,IACEzhB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAStC,MAAM,eAAKuC,UAAU,UAC5B/C,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,UAGfuD,IAAI,QAEJN,EAAAC,EAAAC,cAAC+hB,GAAD,OAEFjiB,EAAAC,EAAAC,cAACohB,GAAD,CACEG,IACEzhB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAStC,MAAM,2BAAOuC,UAAU,UAC9B/C,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,aAGfuD,IAAI,OACJ4hB,aAAa,GAEbliB,EAAAC,EAAAC,cAACiiB,GAAD,OAEFniB,EAAAC,EAAAC,cAACohB,GAAD,CACEG,IACEzhB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAStC,MAAM,qBAAMuC,UAAU,UAC7B/C,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,UAGfuD,IAAI,WAEJN,EAAAC,EAAAC,cAACkiB,GAAD,OAEFpiB,EAAAC,EAAAC,cAACohB,GAAD,CACEG,IACEzhB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAStC,MAAM,qBAAMuC,UAAU,UAC7B/C,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,UAGfuD,IAAI,SAEJN,EAAAC,EAAAC,cAACmiB,GAAD,CAAOviB,KAAM6hB,EAAkB9b,QAAS+b,KAE1C5hB,EAAAC,EAAAC,cAACohB,GAAD,CACEG,IACEzhB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAStC,MAAM,2BAAOuC,UAAU,UAC9B/C,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,UAGfuD,IAAI,WAEJN,EAAAC,EAAAC,cAACoiB,GAAD,OAEFtiB,EAAAC,EAAAC,cAACohB,GAAD,CACEG,IACEzhB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAStC,MAAM,iCAAQuC,UAAU,UAC/B/C,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM7S,KAAK,WAGfuD,IAAI,YAEJN,EAAAC,EAAAC,cAAA,sCAINF,EAAAC,EAAAC,cAACqiB,GAAD,CAAcrmB,KAAMiiB,EAAO9d,gBAAiBA,MCxGlDmiB,EAAQ,SA+JOrL,eA5Jb,SAAAA,EAAY1X,GAAO,IAAAuK,EAAA,OAAA7I,OAAA8I,EAAA,EAAA9I,CAAA+I,KAAAiN,IACjBnN,EAAA7I,OAAAgJ,EAAA,EAAAhJ,CAAA+I,KAAA/I,OAAAiJ,EAAA,EAAAjJ,CAAAgW,GAAA9M,KAAAH,KAAMzK,KAuHRuH,WAAa,SAAArL,GACXS,QAAQC,MAAM,eACd4f,GAAenN,IAAI,UAAWnT,IA1HbqO,EA6HnBuS,cAAgB,WACdvS,EAAKe,SAAS,CAAEqR,WAAW,KA5H3BpS,EAAKgB,MAAQ,CACXrP,QAAS,KAaT8mB,oBAAoB,EAGpBrG,WAAW,IAEE5hB,OAAOkoB,UAAUC,cAAgBnoB,OAAOkoB,UAAUE,UACtD3nB,QAAQ,OAAS,GAC1B0Y,IAAOkP,OAAO,SAGhB7lB,IAAQ8lB,OAAO,CACbC,IAAK,GACLC,SAAU,EACVC,SAAU,IA7BKjZ,mFAiCC,IAAAqB,EAAAnB,KAKlBlF,IAAMke,aAAaC,SAASC,IAC1B,SAAAD,GAEE,OAAOA,GAET,SAAA/b,GACE,IAAIic,EAAe,qBAcnB,OAZIjc,EAAM+b,UAAsC,MAA1B/b,EAAM+b,SAASG,SACnCjY,EAAKrE,WAAW,MAChBqc,EAAe,kCAGfjc,EAAM+b,UACN/b,EAAM+b,SAASjnB,MACfkL,EAAM+b,SAASjnB,KAAKkL,QAEpBic,EAAejc,EAAM+b,SAASjnB,KAAKkL,OAErCpK,IAAQoK,MAAMic,GACPE,QAAQC,OAAOpc,KAG1BhL,QAAQ4F,IAAI,8DACZia,GAAehX,IAAI,UAAW,SAAAtJ,GACxBA,GACFS,QAAQC,MAAM,4BACdD,QAAQC,MAAMV,GACd0P,EAAKN,SAAS,CAAEpP,QAASA,MAEzB0P,EAAKN,SAAS,CAAEqR,WAAW,IAC3BhgB,QAAQC,MAAM,gCAEhBgP,EAAKN,SAAS,CAAE0X,oBAAoB,MAEtCxG,GAAe/Z,iBAAiB,UAAW,SAAAvG,GACzC0P,EAAKN,SAAS,CAAEpP,QAASA,MAE3BiC,EAAcK,YAAc,WAC1BjB,IAAQsY,QAAQ,iCAAS,IAE3B1X,EAAcI,eAAiB,WAC7BhB,IAAQT,KAAK,iCAAS,IAExB/B,OAAO0H,iBACL,UACA,SAAAC,GACE,GAAIA,GAAKA,EAAEjG,MAAQiG,EAAEjG,KAAKunB,eAAgB,CACxC,IAAMC,EAASvhB,EAAEjG,KAAKnB,IAChB4oB,EAAWxhB,EAAEjG,KAAKsE,MACpB5F,MAAa8oB,GAAUloB,MAAmBmoB,IhDrGtDppB,EgDsGiBmpB,E/ClGjBnoB,E+CmGuBooB,EACb9nB,EAAcI,eAAe,CAC3BlB,IAAK2oB,EACLljB,MAAOmjB,QAKf,8CAIeC,EAAW/T,EAAWgU,GAGvC,IAAMlP,GAAS9E,EAAUlU,SAAWuO,KAAKc,MAAMrP,QACzCkZ,EAAShF,EAAUlU,UAAYuO,KAAKc,MAAMrP,QAC5CgZ,IACFvY,QAAQC,MAAM,aACd2I,IAAM8e,SAASC,QAAQC,OAAvB,MAAyC9Z,KAAKc,MAAMrP,QAAQ0C,MAC5DxC,EAAcM,QAAQ+N,KAAKc,MAAMrP,SAAS,IAExCkZ,IACFzY,QAAQC,MAAM,cACd2I,IAAM8e,SAASC,QAAQC,OAAvB,MAAyC,KACzCnoB,EAAc2C,+CAehB,GAAI0L,KAAKc,MAAMyX,mBACb,OACEziB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAM/O,MAAO,CAAEyI,UAAW,OAASvM,KAAK,aAI9C,IAAI0kB,EAAM,OAIV,OAHKvX,KAAKc,MAAMrP,UACd8lB,EAAM,WAGNzhB,EAAAC,EAAAC,cAAC+jB,EAAenC,SAAhB,CACErf,MAAO,CACL9G,QAASuO,KAAKc,MAAMrP,QACpBqL,WAAYkD,KAAKlD,WACjBoV,UAAWlS,KAAKc,MAAMoR,UACtBG,cAAerS,KAAKqS,gBAGtBvc,EAAAC,EAAAC,cAACgkB,GAAD,CAAKzC,IAAKA,YAvJA9iB,IAAMiN,WCHJnF,QACW,cAA7BjM,OAAOC,SAASO,UAEe,UAA7BR,OAAOC,SAASO,UAEhBR,OAAOC,SAASO,SAASmpB,MACvB,2DCZNC,IAASC,OAAOrkB,EAAAC,EAAAC,cAACokB,GAAD,MAASnY,SAASoY,eAAe,SD2H3C,kBAAmB7B,WACrBA,UAAU8B,cAAcC,MAAM9d,KAAK,SAAA+d,GACjCA,EAAaC","file":"static/js/main.0e932fe8.chunk.js","sourcesContent":["const urls = {\n  // todo: this should not be in frontend\n  // backend should complete url for avatar or any asset\n  cloudFront: \"https://dnsofx4sf31ab.cloudfront.net/\",\n  debugMsgSrc: \"http://localhost:9009\",\n\n  socketAPI: \"https://api.yiyechat.com\", // ec2\n  // socketAPI: \"https://chat.yiyechat.com\", // beanstalk\n  // socketAPI: \"http://localhost:8081\",\n\n  dbAPI: \"https://api-v2.yiyechat.com\"\n  // dbAPI: \"http://localhost:5000\"\n}\n\nexport default urls\n","let _url = window.location.search.substring(1)\n\nexport const setUrl = url => {\n  _url = url\n}\n\nexport const getUrl = () => {\n  return _url\n}\n\nexport const getDomain = () => {\n  const url = getUrl()\n  var domain = extractHostname(url),\n    splitArr = domain.split(\".\"),\n    arrLen = splitArr.length\n\n  //extracting the root domain here\n  //if there is a subdomain\n  if (arrLen > 2) {\n    domain = splitArr[arrLen - 2] + \".\" + splitArr[arrLen - 1]\n    //check to see if it's using a Country Code Top Level Domain (ccTLD) (i.e. \".me.uk\")\n    if (\n      splitArr[arrLen - 2].length === 2 &&\n      splitArr[arrLen - 1].length === 2\n    ) {\n      //this is using a ccTLD\n      domain = splitArr[arrLen - 3] + \".\" + domain\n    }\n  }\n  return domain\n}\n\nfunction extractHostname(url) {\n  var hostname\n  //find & remove protocol (http, ftp, etc.) and get hostname\n\n  if (url.indexOf(\"//\") > -1) {\n    hostname = url.split(\"/\")[2]\n  } else {\n    hostname = url.split(\"/\")[0]\n  }\n\n  //find & remove port number\n  hostname = hostname.split(\":\")[0]\n  //find & remove \"?\"\n  hostname = hostname.split(\"?\")[0]\n\n  return hostname\n}\n","let _title = null\n\nexport const getPageTitle = () => {\n  return _title\n}\n\nexport const setPageTitle = title => {\n  _title = title\n}\n","import * as io from \"socket.io-client\"\n\nimport urls from \"config/urls\"\nimport { getUrl, getDomain } from \"utils/url\"\nimport { getPageTitle } from \"utils/pageTitle\"\nlet _socket = null\n\nconst _config = {\n  account: null,\n  // roomId: page url/site domain/lobby\n  // TODO: default roomId should be kept in one place\n  // right now Header.js also need to specify default\n  // chosen radio button is site\n  roomId: getDomain()\n}\nfunction _sendDanmu(message) {\n  const danmuMsg = {\n    msg: message\n  }\n  window.parent.postMessage(danmuMsg, \"*\")\n}\nconst socketManager = {\n  sendMessage: msg => {\n    _socket.emit(\"new message\", msg)\n  },\n  updatePageInfo: data => {\n    _socket.emit(\"page update\", data)\n  },\n  // connect should be called when user is logged in\n  // after user data is properly set\n  // socket is initilized only once, callbacks are registered\n  // only once, should only update socket config but not callbacks\n  connect: account => {\n    _config.account = account\n    if (_socket) {\n      console.debug(\"socket already created, reconnect\")\n      if (_socket.connected) {\n        console.warn(\"socket currently connected\")\n      } else {\n        _socket.connect()\n      }\n      return\n    } else {\n      console.debug(\"create socket and connect!\")\n    }\n    _socket = io(urls.socketAPI, { path: \"/socket.io\" })\n\n    _socket.on(\"new message\", data => {\n      console.debug(data)\n      // TODO: move following data massaging work to backend\n      data.self = data.sender.toString() === _config.account.id.toString()\n      data.type = \"text\"\n      if (data.message.startsWith(\"stickers/\")) {\n        data.type = \"sticker\"\n      }\n      data.content = data.message\n      data.userId = data.sender\n      data.name = data.username\n      if (data.hasAvatar) {\n        data.avatarSrc = urls.cloudFront + data.userId + \".jpg\"\n      }\n      _sendDanmu(data)\n      if (socketHandler.onLiveMsg) {\n        socketHandler.onLiveMsg(data)\n      } else {\n        console.warn(\"onLiveMsg not defined\")\n      }\n    })\n    _socket.on(\"user joined\", data => {\n      // console.debug(\"user joined\")\n      // console.log(data)\n      if (socketHandler.onUserJoin) {\n        socketHandler.onUserJoin(data)\n      } else {\n        console.warn(\"onUserJoin not defined\")\n      }\n    })\n    _socket.on(\"user left\", data => {\n      // console.debug(\"user left\")\n      if (socketHandler.onUserLeft) {\n        socketHandler.onUserLeft(data)\n      } else {\n        console.warn(\"onUserLeft not defined\")\n      }\n    })\n    _socket.on(\"disconnect\", data => {\n      console.debug(\"disconnect\")\n      if (socketHandler.onDisconnected) {\n        socketHandler.onDisconnected(data)\n      } else {\n        console.warn(\"onDisconnected not defined\")\n      }\n    })\n    _socket.on(\"login\", data => {\n      console.debug(\"connected, login as \" + _config.account.id)\n      if (socketHandler.onConnected) {\n        socketHandler.onConnected(data)\n      } else {\n        console.warn(\"onConnected not defined\")\n      }\n\n      _socket.emit(\"login\", {\n        username: _config.account.name,\n        userId: _config.account.id,\n        roomId: _config.roomId,\n        url: getUrl(), // added field in v2.6.0\n        version: \"4.0.1\", // TODO: get from config\n        lang: \"en\", // TODO\n        pageTitle: getPageTitle(),\n        token: _config.account.token\n      })\n    })\n  },\n  togglePageSite: roomId => {\n    // TODO: rename this to changeRoom\n\n    // TODO: don't really have to reconnect\n    // just tell socket server to change room\n    // _config.pageOrSite = pageOrSite\n    _config.roomId = roomId\n    if (socketHandler.onRoomChange) {\n      socketHandler.onRoomChange(roomId)\n    } else {\n      console.warn(\"onRoomChange not defined\")\n    }\n    _socket.disconnect()\n    setTimeout(() => {\n      _socket.connect()\n    }, 500)\n  },\n  disconnect: () => {\n    if (_socket) {\n      if (_socket.connected) {\n        console.debug(\"disconnect socket\")\n        _socket.disconnect()\n      } else {\n        console.warn(\"socket not connected, no need to disconnect\")\n      }\n    } else {\n      console.warn(\"socket not created, cannot disconnect\")\n    }\n  }\n}\nexport const socketHandler = {}\nexport default socketManager\n","import React from \"react\"\n\nconst TabContext = React.createContext()\n\nexport default TabContext\n","import React, { useContext } from \"react\"\nimport { Avatar } from \"antd\"\nimport TabContext from \"context/tab-context\"\n\nimport urls from \"config/urls\"\n\nconst usersStyle = {\n  background: \"white\",\n  position: \"fixed\",\n  zIndex: 1,\n  left: 0,\n  width: \"100%\",\n  overflow: \"auto\",\n  maxHeight: \"50%\",\n  padding: 5,\n  paddingTop: 10,\n  borderBottom: \"1px solid lightgray\"\n}\n\nfunction Users(props) {\n  const tabContext = useContext(TabContext)\n\n  const users = (props.users || []).map(user => {\n    // shim code to support new and old clients\n    // to be remvoed\n    if (user.user && user.user.numId) {\n      // must be on new client\n      user.avatarSrc = user.user.avatarSrc\n    } else {\n      if (user.hasAvatar) {\n        user.avatarSrc = urls.cloudFront + user.userId + \".jpg\"\n      }\n    }\n    return (\n      <div\n        className=\"sp-online-user\"\n        onClick={() => tabContext.selectOtherUser(user)}\n        key={user.userId}\n      >\n        <Avatar\n          title={user.username}\n          size={45}\n          shape=\"square\"\n          icon=\"user\"\n          src={user.avatarSrc}\n        />\n        <div className=\"sp-online-user-username\">{user.username}</div>\n      </div>\n    )\n  })\n\n  return <div style={usersStyle}>{users}</div>\n}\n\nexport default Users\n","import React from \"react\"\n\nconst accountContext = React.createContext()\n\nexport default accountContext\n","import \"./Header.css\"\n\nimport React, { useState, useEffect, useContext } from \"react\"\nimport { Radio, Button, Tooltip } from \"antd\"\nimport { Row, Col } from \"antd\"\n\nimport socketManager, { socketHandler } from \"socket/socket\"\nimport Users from \"./Users\"\nimport AccountContext from \"context/account-context\"\nimport TabContext from \"context/tab-context\"\nimport urls from \"config/urls\"\nimport { getUrl, getDomain } from \"utils/url\"\n\nfunction ChatHeader(props) {\n  const [showUsers, toggleUsers] = useState(false)\n  // which room socket is in, the source of truth isn't\n  // in the UI, it's in the socket module, UI subscribe\n  // to change of socket module\n  const [room, setRoom] = useState(getDomain())\n  const [users, setUsers] = useState([])\n  const accountContext = useContext(AccountContext)\n  const tabContext = useContext(TabContext)\n\n  useEffect(() => {\n    console.log(\"register user join/left handlers\")\n    socketHandler.onUserJoin = data => {\n      setUsers(data.onlineUsers)\n    }\n    socketHandler.onUserLeft = data => {\n      setUsers(data.onlineUsers)\n    }\n    socketHandler.onRoomChange = room => {\n      setRoom(room)\n    }\n    window.addEventListener(\n      \"message\",\n      e => {\n        if (e.origin === urls.debugMsgSrc) {\n          setUsers(e.data)\n        }\n      },\n      false\n    )\n    return () => {\n      socketHandler.onUserJoin = null\n      socketHandler.onUserLeft = null\n    }\n    // No clean up because chat header is never unmounted after mounted\n  }, [])\n\n  let content = (\n    <center>\n      <Button\n        onClick={() => {\n          tabContext.changeTab(\"account\")\n        }}\n        size=\"small\"\n        type=\"primary\"\n      >\n        去登录\n      </Button>\n    </center>\n  )\n  if (accountContext.account) {\n    content = (\n      <div>\n        {/* <Switch\n        className=\"sp-toggle-online\"\n        checkedChildren=\"在线\"\n        unCheckedChildren=\"离线\"\n        defaultChecked\n        onChange={toggleOnline}\n      /> */}\n\n        <Radio.Group\n          className=\"sp-toggle-page-site-chat\"\n          size=\"small\"\n          value={room}\n          buttonStyle=\"solid\"\n          onChange={e => {\n            const val = e.target.value\n            // setRoom(val)\n            socketManager.togglePageSite(val)\n          }}\n        >\n          <Tooltip placement=\"bottom\" title=\"anywhere\">\n            <Radio.Button value=\"lobby\">大厅</Radio.Button>\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title={getDomain()}>\n            <Radio.Button value={getDomain()}>网站</Radio.Button>\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title={getUrl()}>\n            <Radio.Button value={getUrl()}>网页</Radio.Button>\n          </Tooltip>\n        </Radio.Group>\n        {/* <Col style={{ textAlign: \"right\" }} span={8}> */}\n        <Button\n          style={{ border: \"none\", position: \"absolute\", right: 0 }}\n          onClick={() => toggleUsers(!showUsers)}\n          size=\"small\"\n          icon=\"team\"\n        >\n          <span style={{ marginLeft: 5 }}>{users.length}</span>\n        </Button>\n        {showUsers && <Users users={users} />}\n      </div>\n    )\n  }\n  return <center className=\"sp-tab-header\">{content}</center>\n}\n\nexport default ChatHeader\n","import \"./Body.css\"\n\nimport React from \"react\"\n\nfunction MessageBody(props) {\n  const data = props.data\n  let content = data.content\n  let className = \"sp-message-body \" + data.type\n  if (data.type === \"sticker\") {\n    // TODO: maybe centralize this code for getting image path\n    let imgSrc = content\n    if (window.chrome && window.chrome.extension) {\n      imgSrc = window.chrome.extension.getURL(\"build/\" + content)\n    }\n    content = <img alt={imgSrc} src={imgSrc} />\n  }\n  return <div className={className}>{content}</div>\n}\n\nexport default MessageBody\n","import React from \"react\"\nimport { Button, Avatar, Card } from \"antd\"\nconst { Meta } = Card\n\nconst aboutStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  whiteSpace: \"nowrap\",\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  textAlign: \"left\",\n  marginBottom: 5\n}\n\nfunction ProfileCard(props) {\n  const { user, following, followerCount, followUser, directMessage } = props\n  const footer = (\n    <div>\n      {user.about && <div style={aboutStyle}>{user.about}</div>}\n\n      {following && (\n        <Button\n          icon=\"user-delete\"\n          size=\"small\"\n          onClick={e => {\n            e.stopPropagation()\n\n            followUser(false)\n          }}\n        >\n          取消关注\n        </Button>\n      )}\n      {!following && (\n        <Button\n          icon=\"user-add\"\n          type=\"primary\"\n          size=\"small\"\n          onClick={e => {\n            e.stopPropagation()\n            followUser(true)\n          }}\n        >\n          关注\n        </Button>\n      )}\n\n      <Button\n        onClick={e => {\n          e.stopPropagation()\n          directMessage(user)\n        }}\n        icon=\"mail\"\n        style={{ marginLeft: 10 }}\n        size=\"small\"\n      >\n        私信\n      </Button>\n    </div>\n  )\n\n  const avatar = (\n    <AvatarWithFollowerCount\n      followerCount={followerCount}\n      src={user.avatarSrc}\n    />\n  )\n\n  return (\n    <Card\n      onClick={e => {\n        e.stopPropagation()\n      }}\n      size=\"small\"\n      style={{ width: 270, overflow: \"hidden\" }}\n    >\n      <Meta avatar={avatar} title={user.name} description={footer} />\n    </Card>\n  )\n}\n\nfunction AvatarWithFollowerCount(props) {\n  return (\n    <span>\n      <Avatar size={48} src={props.src} icon=\"user\" />\n      {/* <div>关注者: {props.followerCount}</div> */}\n    </span>\n  )\n}\n\nexport default ProfileCard\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getUser = userId => {\n  return axios.get(`${urls.dbAPI}/api/v1/user/${userId}`)\n}\n\nexport const getLatestUsers = () => {\n  return axios.get(`${urls.dbAPI}/api/v1/latest_users`)\n}\n\nexport const updateUser = payload => {\n  const formData = new FormData()\n  formData.append(\"name\", payload.name)\n  formData.append(\"about\", payload.about)\n  formData.append(\"avatar\", payload.avatar, \"avatar\")\n  return axios.post(urls.dbAPI + \"/api/v1/user\", formData)\n}\n","// If user follow/unfollow anyone, it will call\n// follow method, the Follow.js component can 'subscribe'\n// to it by providing a definition of the function\n\nconst followEventHandler = {\n  follow: () => {\n    console.log(\"follow not mounted\")\n  }\n}\n\nexport default followEventHandler\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const followUser = id => {\n  const payload = {\n    id: id\n  }\n  return axios.post(`${urls.dbAPI}/api/v1/follow`, payload)\n}\n","import React, { useState, useEffect, useContext } from \"react\"\n\nimport { getUser } from \"services/user\"\nimport AccountContext from \"context/account-context\"\nimport TabContext from \"context/tab-context\"\nimport followEventHandler from \"containers/Account/Follow/event\"\nimport { followUser } from \"services/follow\"\n\nfunction ProfileMeta(props) {\n  // Use this container to fetch other user's data\n  // it's a wrapper that handles state and api calls\n  // but doesn't contain html layout\n\n  const accountContext = useContext(AccountContext)\n  const tabContext = useContext(TabContext)\n\n  const [user, setUser] = useState(props.user)\n  const [followerCount, setFollowerCount] = useState(\"\")\n  const [following, setFollowing] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  // If receive a wait, won't start fetching right away\n  // e.g. hover card\n  const wait = Boolean(props.wait)\n\n  function updateAccountFollowing(follow) {\n    // context.account needs to know about\n    // following number has changed\n    const newAccountData = { ...accountContext.account }\n    if (follow) {\n      newAccountData.followingCount++\n    } else {\n      newAccountData.followingCount--\n    }\n    accountContext.setAccount(newAccountData)\n  }\n\n  function toggleFollow(follow) {\n    setFollowing(follow)\n    if (follow) {\n      setFollowerCount(followerCount + 1)\n    } else {\n      setFollowerCount(followerCount - 1)\n    }\n\n    followUser(user.id)\n      .then(resp => {\n        updateAccountFollowing(follow)\n        followEventHandler.follow(follow, user)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {})\n  }\n\n  useEffect(() => {\n    if (wait || loaded) return\n    setLoading(true)\n    getUser(user.id)\n      .then(resp => {\n        console.debug(resp.data)\n        const userData = resp.data\n        setLoaded(true)\n        setUser(userData)\n        setFollowing(userData.following)\n        setFollowerCount(userData.followerCount)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        console.log(\"done loading\")\n        setLoading(false)\n      })\n  }, [wait, loaded])\n\n  const childrenWithProps = React.Children.map(props.children, child =>\n    React.cloneElement(child, {\n      ...child.props,\n      loading: loading,\n      loaded: loaded,\n      user: user,\n      followerCount: followerCount,\n      following: following,\n      followUser: toggleFollow,\n      directMessage: tabContext.directMessage\n    })\n  )\n  return <span>{childrenWithProps}</span>\n}\n\nexport default ProfileMeta\n","import React, { useState, useContext } from \"react\"\nimport { Avatar } from \"antd\"\nimport TabContext from \"context/tab-context\"\n\nimport ProfileCard from \"./ProfileCard\"\nimport ProfileMeta from \"./ProfileMeta\"\n\nimport Popper from \"@material-ui/core/Popper\"\n\nfunction AvatarWithHoverCard(props) {\n  const user = props.user\n  const tabContext = useContext(TabContext)\n  const [anchorEl, setAnchor] = useState(null)\n\n  const showingCard = Boolean(anchorEl)\n  let hideCardTimer = 0\n  function hideCard() {\n    clearTimeout(hideCardTimer)\n    hideCardTimer = setTimeout(() => {\n      setAnchor(null)\n    }, 100)\n  }\n  function showCard(el) {\n    clearTimeout(hideCardTimer)\n    if (el) {\n      setAnchor(el)\n    }\n  }\n\n  return (\n    <span>\n      <ProfileMeta wait={!showingCard} user={user}>\n        <AvatarWrapper\n          icon=\"user\"\n          className={props.className}\n          src={user.avatarSrc}\n          size={props.size}\n          onClick={() => tabContext.selectOtherUser(user)}\n          onMouseEnter={e => {\n            console.log(\"mouse enter avatar\")\n            showCard(e.currentTarget)\n          }}\n          onMouseLeave={hideCard}\n          showingCard={showingCard}\n        />\n        <MyPoper\n          showCard={showCard}\n          hideCard={hideCard}\n          showingCard={showingCard}\n          anchorEl={anchorEl}\n        />\n      </ProfileMeta>\n    </span>\n  )\n}\n\nfunction AvatarWrapper(props) {\n  let icon = \"user\"\n  let src = props.src\n  if (props.loading && props.showingCard) {\n    src = null\n    icon = \"loading\"\n  }\n\n  return (\n    <Avatar\n      icon={icon}\n      className={props.className}\n      src={src}\n      size={props.size}\n      onClick={props.onClick}\n      onMouseEnter={props.onMouseEnter}\n      onMouseLeave={props.onMouseLeave}\n    />\n  )\n}\n\nfunction MyPoper(props) {\n  let visibility = \"hidden\"\n  if (props.loaded) {\n    visibility = \"visible\"\n  }\n  return (\n    <Popper\n      style={{ zIndex: 10, visibility: visibility }}\n      onMouseEnter={e => {\n        props.showCard()\n      }}\n      onMouseLeave={props.hideCard}\n      anchorEl={props.anchorEl}\n      open={props.showingCard}\n    >\n      <ProfileCard {...props} />\n    </Popper>\n  )\n}\n\nexport default AvatarWithHoverCard\n","import React from \"react\"\n\nimport MessageBody from \"./Body\"\nimport AvatarWithHoverCard from \"containers/OtherProfile/AvatarWithHoverCard\"\nimport { Avatar } from \"antd\"\n\n/*\nThis is used by chat messages and direct messages\nprops includes:\n  avatarSrc\n  username\n  content\n  type: text/sticker\n  self\n*/\nconst userNameStyle = {\n  fontSize: \"smaller\",\n  verticalAlign: \"middle\",\n  marginLeft: 5,\n  marginRight: 5\n}\n\nfunction ChatMessage(props) {\n  const data = props.data\n\n  const user = {\n    id: data.userId,\n    name: data.name,\n    self: data.self,\n    avatarSrc: data.avatarSrc\n  }\n\n  let messageHeader = null\n  let textAlign = \"left\"\n\n  let avatar = <Avatar size=\"small\" icon=\"user\" src={user.avatarSrc} />\n  if (!user.self && props.withHoverCard) {\n    avatar = (\n      <AvatarWithHoverCard\n        className=\"sp-chat-message-avatar\"\n        size=\"small\"\n        user={user}\n      />\n    )\n  }\n\n  if (user.self) {\n    textAlign = \"right\"\n    messageHeader = (\n      <div style={{ marginTop: 10 }}>\n        <span style={userNameStyle}>{user.name}</span>\n        {avatar}\n      </div>\n    )\n  } else {\n    messageHeader = (\n      <div style={{ marginTop: 10 }}>\n        {avatar}\n        <span style={userNameStyle}>{user.name}</span>\n      </div>\n    )\n  }\n  if (props.mergeAbove) {\n    messageHeader = <span />\n  }\n\n  return (\n    <div\n      className={user.self ? \"self\" : \"other\"}\n      style={{ textAlign: textAlign }}\n    >\n      {messageHeader}\n      <MessageBody data={data} />\n    </div>\n  )\n}\n\nexport default ChatMessage\n","import React from \"react\"\nimport Message from \"./Message\"\nimport { socketHandler } from \"socket/socket\"\nimport AccountContext from \"context/account-context\"\nconst chatBodyStyle = {\n  height: \"calc(100% - 107px)\",\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n  width: \"100%\",\n  position: \"fixed\",\n  background: \"#f6f9fc\",\n  padding: 10,\n  paddingBottom: 50\n}\nconst AUTO_SCROLL_TRESHOLD_DISTANCE = 200\nclass ChatBody extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { messages: props.data || [] }\n    this.bodyRef = React.createRef()\n    // window.addLiveMsgToChatBody only for debug\n    window.addLiveMsgToChatBody = this.addMsg\n  }\n\n  componentDidMount() {\n    console.log(\"register new message handler\")\n    socketHandler.onLiveMsg = data => {\n      this.setState((state, props) => ({\n        messages: [...state.messages, data]\n      }))\n      let timeout = 10\n      if (data.type === \"sticker\") timeout = 500\n      this.scrollToBottomIfNearBottom(timeout)\n    }\n  }\n  scrollToBottomIfNearBottom = timeout => {\n    timeout = timeout || 100\n    const bodyDiv = this.bodyRef.current\n    if (\n      bodyDiv.scrollHeight - bodyDiv.scrollTop - bodyDiv.offsetHeight <\n      AUTO_SCROLL_TRESHOLD_DISTANCE\n    ) {\n      setTimeout(() => {\n        bodyDiv.scrollTop = bodyDiv.scrollHeight\n      }, timeout)\n    }\n  }\n  addMsg = msg => {\n    this.setState((state, props) => ({\n      messages: [...state.messages, msg]\n    }))\n  }\n\n  render() {\n    let messages = []\n    let lastMsg = null\n    let index = 0\n    const data = this.state.messages\n\n    // note: do not modify msg since it's state data\n    data.forEach(msg => {\n      let mergeAbove = false\n      if (lastMsg && lastMsg.userId === msg.userId) {\n        mergeAbove = true\n      }\n      messages.push(\n        <Message\n          withHoverCard={true}\n          key={index++}\n          data={msg}\n          mergeAbove={mergeAbove}\n        />\n      )\n      lastMsg = msg\n    })\n    return (\n      <div ref={this.bodyRef} style={chatBodyStyle}>\n        {messages}\n      </div>\n    )\n  }\n}\nChatBody.contextType = AccountContext\n\nexport default ChatBody\n","import \"./Emoji.css\"\nimport \"emoji-mart/css/emoji-mart.css\"\n\nimport React from \"react\"\nimport { Picker } from \"emoji-mart\"\n\nimport ClickWrapper from \"../OutsideClickDetector\"\n\nconst i18n = {\n  search: \"搜索\",\n  clear: \"清除\", // Accessible label on \"clear\" button\n  notfound: \"没找到\",\n  skintext: \"Choose your default skin tone\",\n  categories: {\n    search: \"搜索结果\",\n    recent: \"常用\",\n    people: \"笑脸\",\n    nature: \"动植物\",\n    foods: \"吃喝\",\n    activity: \"活动\",\n    places: \"旅游\",\n    objects: \"东西\",\n    symbols: \"象征\",\n    flags: \"旗子\",\n    custom: \"欢乐兔\"\n  },\n  categorieslabel: \"Emoji categories\", // Accessible title for the list of categories\n  skintones: {\n    1: \"Default Skin Tone\",\n    2: \"Light Skin Tone\",\n    3: \"Medium-Light Skin Tone\",\n    4: \"Medium Skin Tone\",\n    5: \"Medium-Dark Skin Tone\",\n    6: \"Dark Skin Tone\"\n  }\n}\nconst customEmojis = []\nfor (let i = 1; i <= 90; i++) {\n  const imageUrl = `stickers/happy_bun/${i}.gif`\n  customEmojis.push({\n    name: \"happy bun \" + i,\n    short_names: [`happy_bun_` + i],\n    imageUrl: imageUrl\n  })\n}\n\nfunction Emoji(props) {\n  return (\n    <ClickWrapper exceptionClass={props.exceptionClass} close={props.close}>\n      <Picker\n        i18n={i18n}\n        emojiTooltip={true}\n        include={[\"custom\", \"people\", \"nature\", \"foods\", \"activity\", \"places\"]}\n        custom={customEmojis}\n        onSelect={props.addEmoji}\n        set=\"apple\"\n        showPreview={false}\n      />\n    </ClickWrapper>\n  )\n}\nexport default Emoji\n","import React from \"react\"\n\nclass OutsideAlerter extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.setWrapperRef = this.setWrapperRef.bind(this)\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside)\n  }\n\n  /**\n   * Set the wrapper ref\n   */\n  setWrapperRef(node) {\n    this.wrapperRef = node\n  }\n\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    // console.log(event.target.className)\n    if (\n      event.target.className &&\n      event.target.className.indexOf &&\n      event.target.className.indexOf(this.props.exceptionClass) > -1\n    )\n      return\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.close()\n      event.isOutsideClick = true\n    }\n  }\n\n  render() {\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>\n  }\n}\n\nexport default OutsideAlerter\n","import \"./InputWithPicker.css\"\n\nimport React, { useState, useRef, useEffect } from \"react\"\nimport { Icon, Input } from \"antd\"\n\nimport Emoji from \"../Emoji\"\n\nfunction InputWithPicker(props) {\n  const [input, setInput] = useState(\"\")\n  const inputRef = useRef()\n  // show emoji is one step slower than will show emoji\n  // so that we can show a loading icon\n  const [showEmoji, setShowEmoji] = useState(false)\n  const [willShowEmoji, setWillShowEmoji] = useState(false)\n\n  const sending = props.sending\n  useEffect(() => {\n    if (!sending) {\n      inputRef.current.focus()\n    }\n  }, [sending])\n\n  useEffect(() => {\n    setShowEmoji(willShowEmoji)\n  }, [willShowEmoji])\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      setWillShowEmoji(false)\n      const shouldClear = props.send(input)\n      if (shouldClear) {\n        setInput(\"\")\n      }\n    }\n  }\n  const addEmoji = emoji => {\n    if (emoji.custom) {\n      props.send(emoji.imageUrl)\n      setWillShowEmoji(false)\n    } else {\n      setInput(input => {\n        return input + emoji.native\n      })\n    }\n    inputRef.current.focus()\n  }\n  const handleChange = e => {\n    setInput(e.target.value)\n  }\n\n  const emojiBtn = (\n    <Icon\n      className=\"emojiOpener\"\n      onClick={e => {\n        setWillShowEmoji(prevState => {\n          setWillShowEmoji(!prevState)\n        })\n      }}\n      type=\"smile\"\n    />\n  )\n\n  return (\n    <div className=\"sp-input-with-picker\">\n      {willShowEmoji && <Icon style={{ margin: 10 }} type=\"loading\" />}\n      {showEmoji && (\n        <Emoji\n          addEmoji={addEmoji}\n          exceptionClass=\"emojiOpener\"\n          close={() => {\n            setWillShowEmoji(false)\n          }}\n        />\n      )}\n      <Input\n        ref={inputRef}\n        size=\"large\"\n        onKeyDown={handleKeyDown}\n        value={input}\n        addonBefore={emojiBtn}\n        // addonAfter={<Icon type=\"paper-clip\" />}\n        onChange={handleChange}\n        disabled={sending}\n        placeholder={sending ? \"发送中。。。\" : \"请输入。。。\"}\n      />\n    </div>\n  )\n}\n\nexport default InputWithPicker\n","import \"./Footer.css\"\n\nimport React, { useContext } from \"react\"\nimport { message } from \"antd\"\n\nimport InputWithPicker from \"components/InputWithPicker\"\nimport AccountContext from \"context/account-context\"\nimport socketManager from \"socket/socket\"\n\nconst MESSAGE_TIME_GAP = 3 * 1000\nlet lastMsgTime = 0\n\nfunction Footer(props) {\n  const accountContext = useContext(AccountContext)\n  const account = accountContext.account\n\n  const send = input => {\n    const now = new Date()\n    if (now - lastMsgTime > MESSAGE_TIME_GAP) {\n      let msg = {\n        msg: input,\n        // TODO: no need to send username\n        // socket server remembers it during login\n        username: account.username\n      }\n      socketManager.sendMessage(msg)\n      lastMsgTime = now\n      return true\n    } else {\n      message.warn(\"请放慢速度\")\n      return false\n    }\n  }\n\n  let content = (\n    <center style={{ padding: 10, background: \"lightgray\" }}>尚未登录</center>\n  )\n  if (account) {\n    content = <InputWithPicker send={send} />\n  }\n\n  return <div className=\"sp-chat-bottom\">{content}</div>\n}\n\nexport default Footer\n","import React from \"react\"\n\nimport Header from \"./Header\"\nimport Body from \"./Body\"\nimport Footer from \"./Footer\"\n\nfunction Chat(props) {\n  return (\n    <div>\n      <Header />\n      <Body />\n      <Footer />\n    </div>\n  )\n}\n\nexport default Chat\n","import React from \"react\"\nimport { Select } from \"antd\"\nconst Option = Select.Option\n\nfunction CommentHeader(props) {\n  return (\n    <center className=\"sp-tab-header\">\n      <Select onChange={props.orderBy} size=\"small\" defaultValue=\"best\">\n        <Option value=\"newest\">按时间排序</Option>\n        <Option value=\"best\">按好评排序</Option>\n      </Select>\n    </center>\n  )\n}\nexport default CommentHeader\n","import \"./Message.css\"\n\nimport React, { useState, useContext } from \"react\"\nimport { Icon } from \"antd\"\nimport AvatarWithHoverCard from \"containers/OtherProfile/AvatarWithHoverCard\"\nimport AccountContext from \"context/account-context\"\n\nfunction Comment(props) {\n  const data = props.data\n  const user = {\n    id: data.userId,\n    name: data.name,\n    avatarSrc: data.avatarSrc,\n    self: data.self\n  }\n\n  const [score, setScore] = useState(data.score)\n  const [voted, setVoted] = useState(data.voted)\n  const account = useContext(AccountContext).account\n\n  function theme() {\n    if (voted) return \"twoTone\"\n    return \"outlined\"\n  }\n  return (\n    <div style={{ marginTop: 10 }} className={data.self ? \"self\" : \"\"}>\n      <AvatarWithHoverCard className=\"sp-comment-message-avatar\" user={user} />\n      <div className=\"sp-message-body text\">\n        <div style={{ marginBottom: 5 }}>\n          <span className=\"sp-comment-message-username\">{data.name}</span>\n          <span className=\"sp-comment-message-time\">{data.time}</span>\n        </div>\n        <div>{data.content}</div>\n        {!data.noFooter && (\n          <div className=\"sp-comment-message-footer\">\n            <span>\n              <Icon\n                theme={theme()}\n                onClick={() => {\n                  if (!account) {\n                    // TODO: show error msg\n                    return\n                  }\n                  setScore(prevScore => {\n                    if (voted) return prevScore - 1\n                    return prevScore + 1\n                  })\n                  setVoted(prevState => {\n                    return !prevState\n                  })\n                  props.vote(data.id)\n                }}\n                type=\"like\"\n              />\n              <span className=\"sp-comment-message-score\">{score}</span>\n            </span>\n            <span\n              onClick={() => props.reply(data.userId, data.name)}\n              className=\"sp-comment-message-reply\"\n            >\n              回复\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Comment\n","import React from \"react\"\n\nimport Message from \"./Message\"\n\nfunction CommentBody(props) {\n  const data = props.data || []\n  // let index = 0\n  let comments = data.map(comment => {\n    return (\n      <Message\n        vote={props.vote}\n        reply={props.reply}\n        // key={index++}\n        key={comment.id}\n        data={comment}\n      />\n    )\n  })\n  if (!comments.length) {\n    comments = <center>没有评论</center>\n  }\n\n  return <div>{comments}</div>\n}\n\nexport default CommentBody\n","import \"./Comment.css\"\n\nimport React from \"react\"\nimport { Button, Icon, Input } from \"antd\"\n\nimport axios from \"axios\"\nimport moment from \"moment\"\n\nimport urls from \"config/urls\"\nimport { getUrl } from \"utils/url\"\nimport AccountContext from \"context/account-context\"\nimport Header from \"./Header\"\nimport Body from \"./Body\"\n\nconst LIMIT = 10\n\nconst commentBodyStyle = {\n  height: \"calc(100% - 100px)\",\n  overflow: \"auto\",\n  width: \"100%\",\n  position: \"fixed\",\n  background: \"#eceff1\",\n  padding: 10,\n  paddingBottom: 30\n}\n\nconst { TextArea } = Input\n\nclass CommentTab extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      submitting: false,\n      comments: [],\n      input: \"\",\n      inputFocus: false,\n      replyTo: \"\",\n      replyToUserId: \"\"\n    }\n    this.inputRef = React.createRef()\n    this.bodyRef = React.createRef()\n    this.offset = 0\n    this.order = \"best\"\n  }\n  onFocus = e => {\n    this.setState({ inputFocus: true })\n  }\n\n  reply = (userId, username) => {\n    this.setState({ replyTo: username, replyToUserId: userId })\n    this.inputRef.current.focus()\n  }\n\n  vote = commentId => {\n    const payload = {\n      comment_id: commentId\n    }\n    axios\n      .post(urls.dbAPI + \"/api/v1/vote_comment\", payload)\n      .then(res => {})\n      .catch(err => {})\n      .then(() => {})\n  }\n\n  submit = () => {\n    const payload = {\n      url: getUrl(),\n      content: this.state.input,\n      reply_to_user_id: this.state.replyToUserId,\n      reply_to_user_name: this.state.replyTo\n    }\n\n    this.setState({ submitting: true })\n    axios\n      .post(urls.dbAPI + \"/api/v1/post_comment\", payload)\n      .then(res => {\n        let content = this.state.input\n        if (this.state.replyTo) {\n          content = \"@\" + this.state.replyTo + \" \\n\" + content\n        }\n        const account = this.context.account\n        const selfMsg = {\n          id: Math.random(100), // whatever unique\n          userId: account.id,\n          avatarSrc: account.avatarSrc,\n          name: account.name,\n          time: moment().fromNow(),\n          content: content,\n          self: true,\n          noFooter: true // can't support any action since there is no id\n          // maybe backend can return id\n        }\n        this.setState({ comments: [selfMsg].concat(this.state.comments) })\n        this.clearInput()\n        setTimeout(() => {\n          console.debug(\"[Comment] scroll to top\")\n          this.bodyRef.current.scrollTop = 0\n        }, 500)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        this.setState({ submitting: false })\n      })\n  }\n  handleInput = e => {\n    this.setState({ input: e.target.value })\n  }\n  clearInput = () => {\n    this.setState({\n      input: \"\",\n      inputFocus: false,\n      replyTo: null,\n      replyToUserId: null\n    })\n  }\n  orderBy = val => {\n    this.setState({ comments: [] })\n    this.offset = 0\n    this.order = val\n    this.loadComments()\n  }\n  loadMore = () => {\n    this.offset = this.state.comments.length\n    this.loadComments()\n  }\n  loadComments = () => {\n    this.setState({ loading: true })\n    const payload = {\n      url: getUrl(),\n      offset: this.offset,\n      limit: LIMIT,\n      order: this.order\n    }\n    axios\n      .post(urls.dbAPI + \"/api/v1/get_comments\", payload)\n      .then(res => {\n        res.data.forEach(comment => {\n          comment.time = moment.utc(comment.created).fromNow()\n        })\n        this.setState({ comments: this.state.comments.concat(res.data) })\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        this.setState({ loading: false })\n      })\n  }\n  componentDidMount() {\n    this.loadComments()\n  }\n\n  render() {\n    let rowNum = 1\n    if (this.state.inputFocus) {\n      rowNum = 5\n    }\n    let placeholder = \"留言。。。\"\n    if (this.state.replyTo) {\n      placeholder = \"@\" + this.state.replyTo\n    }\n    let footer = (\n      <center style={{ padding: 10, background: \"lightgray\" }}>尚未登录</center>\n    )\n    if (this.context.account) {\n      footer = (\n        <div>\n          <TextArea\n            size=\"large\"\n            value={this.state.input}\n            onFocus={this.onFocus}\n            onChange={this.handleInput}\n            placeholder={placeholder}\n            rows={rowNum}\n            ref={this.inputRef}\n          />\n          {this.state.inputFocus && (\n            <div\n              style={{\n                width: \"100%\",\n                textAlign: \"right\"\n              }}\n            >\n              <Button onClick={this.clearInput}>取消</Button>\n              <Button\n                onClick={this.submit}\n                style={{ margin: 10 }}\n                type=\"primary\"\n                loading={this.state.submitting}\n              >\n                提交\n              </Button>\n            </div>\n          )}\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Header orderBy={this.orderBy} />\n        <div ref={this.bodyRef} style={commentBodyStyle}>\n          {this.state.loading && this.state.comments.length === 0 && (\n            <center>\n              <Icon type=\"loading\" />\n            </center>\n          )}\n          {(!this.state.loading || this.state.comments.length > 0) && (\n            <Body\n              data={this.state.comments}\n              vote={this.vote}\n              reply={this.reply}\n            />\n          )}\n          {this.state.comments.length > 0 && (\n            <center style={{ marginTop: 20 }}>\n              {/* TODO: only if there is more */}\n              <Button\n                loading={this.state.loading}\n                type=\"primary\"\n                onClick={this.loadMore}\n              >\n                加载更多...\n              </Button>\n            </center>\n          )}\n        </div>\n        <div className=\"sp-comment-footer\">{footer}</div>\n      </div>\n    )\n  }\n}\n\nCommentTab.contextType = AccountContext\n\nexport default CommentTab\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getAccount = () => {\n  return axios.get(`${urls.dbAPI}/api/v1/account`)\n}\nexport const login = (userId, password) => {\n  const payload = {\n    userId: userId,\n    password: password\n  }\n  return axios.post(urls.dbAPI + \"/api/v1/login\", payload)\n}\nexport const logout = () => {\n  return axios.post(urls.dbAPI + \"/api/v1/logout\")\n}\nexport const register = password => {\n  const payload = {\n    password: password\n  }\n  return axios.post(urls.dbAPI + \"/api/v1/register\", payload)\n}\nexport const resetPassword = password => {\n  const payload = {\n    password: password\n  }\n  return axios.post(urls.dbAPI + \"/api/v1/reset_password\", payload)\n}\n","import React from \"react\"\nimport { Form, Input, Button, message } from \"antd\"\n\nimport { resetPassword } from \"services/account\"\n\nclass ResetPasswordForm extends React.Component {\n  state = {\n    confirmDirty: false\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        resetPassword(values.password)\n          .then(() => {\n            message.success(\"更改成功！\")\n          })\n          .catch()\n          .then()\n        console.log(\"Received values of form: \", values)\n      }\n    })\n  }\n\n  handleConfirmBlur = e => {\n    const value = e.target.value\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value })\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"两次输入不一致!\")\n    } else {\n      callback()\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true })\n    }\n    callback()\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    }\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    }\n\n    return (\n      <div className=\"sp-special-tab\">\n        <Button\n          onClick={this.props.back}\n          style={{\n            position: \"fixed\",\n            marginTop: 5,\n            marginLeft: 5,\n            border: \"none\",\n            fontSize: \"large\"\n          }}\n          icon=\"arrow-left\"\n        />\n        <center>\n          <h3 style={{ marginTop: 50, marginBottom: 30 }}>更改密码</h3>\n        </center>{\" \"}\n        <Form\n          style={{ width: \"70%\", margin: \"auto\" }}\n          {...formItemLayout}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"新密码\">\n            {getFieldDecorator(\"password\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your password!\"\n                },\n                {\n                  validator: this.validateToNextPassword\n                }\n              ]\n            })(<Input type=\"password\" />)}\n          </Form.Item>\n          <Form.Item label=\"确认密码\">\n            {getFieldDecorator(\"confirm\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please confirm your password!\"\n                },\n                {\n                  validator: this.compareToFirstPassword\n                }\n              ]\n            })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n\n          <Form.Item {...tailFormItemLayout}>\n            <Button\n              size=\"large\"\n              style={{ marginRight: 20 }}\n              onClick={this.props.back}\n            >\n              取消\n            </Button>\n\n            <Button size=\"large\" type=\"primary\" htmlType=\"submit\">\n              保存\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst WrappedResetPasswordForm = Form.create({ name: \"resetPassword\" })(\n  ResetPasswordForm\n)\nexport default WrappedResetPasswordForm\n","import React from \"react\"\nimport ImageUploader from \"react-images-upload\"\nimport \"./AvatarUploader.css\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { pictures: [] }\n    this.onDrop = this.onDrop.bind(this)\n  }\n\n  onDrop(picture) {\n    console.log(picture)\n    this.setState({\n      pictures: picture\n    })\n    this.props.setFile(picture[0])\n  }\n\n  render() {\n    // this lib isn't easy to customize at all\n    // had to use class to toggle upload button!\n    let alreadySelectedImageClassName = \"\"\n    if (this.state.pictures.length) {\n      alreadySelectedImageClassName = \"sp-selected-avatar\"\n    }\n\n    return (\n      <ImageUploader\n        className={alreadySelectedImageClassName}\n        singleImage={true}\n        buttonClassName=\"ant-btn\"\n        withPreview={true}\n        withIcon={false}\n        withLabel={false}\n        buttonText=\"选择图片\"\n        fileTypeError=\"文件类型不支持\"\n        fileSizeError=\"图片太大\"\n        onChange={this.onDrop}\n        label=\"图片必须小于2MB\"\n        imgExtension={[\".jpg\", \".jpeg\", \".png\", \".gif\"]}\n        maxFileSize={5242880}\n      />\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\n\nimport { Form, Input, Select, Button, message } from \"antd\"\n\nimport AvatarUploader from \"./AvatarUploader\"\nimport { updateUser } from \"services/user\"\n\n// const { Option } = Select\nlet avatarFile = null\nclass EditProfileForm extends React.Component {\n  state = {\n    submitting: false\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values)\n        console.log(avatarFile)\n        values.avatar = avatarFile\n        this.setState({ submitting: true })\n\n        updateUser(values)\n          .then(resp => {\n            message.success(\"更新成功！\")\n            this.props.setAccount(resp.data)\n          })\n          .catch(err => {})\n          .then(() => {\n            this.setState({ submitting: false })\n          })\n      }\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    const account = this.props.account\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    }\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    }\n\n    return (\n      <div className=\"sp-special-tab\">\n        <Button\n          onClick={this.props.back}\n          style={{\n            position: \"fixed\",\n            marginTop: 5,\n            marginLeft: 5,\n            border: \"none\",\n            fontSize: \"large\"\n          }}\n          icon=\"arrow-left\"\n        />\n        <center>\n          <h3 style={{ marginTop: 50, marginBottom: 30 }}>修改资料</h3>\n        </center>{\" \"}\n        <Form\n          style={{ width: \"70%\", margin: \"auto\" }}\n          {...formItemLayout}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"上传头像\">\n            {getFieldDecorator(\"upload\", {\n              valuePropName: \"fileList\",\n              getValueFromEvent: () => {\n                return avatarFile\n              }\n            })(\n              <AvatarUploader\n                setFile={file => {\n                  avatarFile = file\n                }}\n              />\n            )}\n          </Form.Item>\n          <Form.Item label={<span>用户名</span>}>\n            {getFieldDecorator(\"name\", {\n              rules: [\n                {\n                  message: \"用户名不能为空\",\n                  whitespace: true\n                }\n              ],\n              initialValue: account.name\n            })(<Input />)}\n          </Form.Item>\n          {/* \n          <Form.Item label=\"性别\">\n            {getFieldDecorator(\"gender\", {\n              rules: [{ required: false, message: \"请选择你的性别!\" }]\n            })(\n              <Select\n              // onChange={this.handleSelectChange}\n              >\n                <Option value=\"male\">男</Option>\n                <Option value=\"female\">女</Option>\n                <Option value=\"other\">其他</Option>\n              </Select>\n            )}\n          </Form.Item> */}\n          <Form.Item label={<span>个人简介</span>}>\n            {getFieldDecorator(\"about\", {\n              initialValue: account.about\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button\n              size=\"large\"\n              style={{ marginRight: 20 }}\n              onClick={this.props.back}\n            >\n              取消\n            </Button>\n            <Button\n              loading={this.state.submitting}\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n            >\n              保存\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst WrappedEditProfileForm = Form.create({ name: \"edit-profile\" })(\n  EditProfileForm\n)\n\nexport default WrappedEditProfileForm\n","import \"./Profile.css\"\n\nimport React, { useState } from \"react\"\nimport { Avatar, Button, Row, Col } from \"antd\"\n\nimport { logout } from \"services/account\"\n\nconst avatarStyle = {\n  margin: \"auto\",\n  marginTop: 20,\n  display: \"block\"\n}\nconst ProfileBodyStyle = {\n  height: \"calc(100% - 35px)\",\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n  width: \"100%\",\n  position: \"fixed\",\n  // background: \"rgb(249, 249, 249)\",\n  padding: 20,\n  paddingTop: 10,\n  paddingBottom: 30\n}\nconst aboutStyle = {\n  display: \"inline-block\",\n  minWidth: 200,\n  maxWidth: 350,\n  borderBottom: \"1px solid lightgray\",\n  textAlign: \"left\",\n  overflow: \"auto\",\n  maxHeight: 72,\n  padding: 5,\n  paddingLeft: 10,\n  paddingRight: 10,\n  wordBreak: \"break-word\"\n}\n\nfunction Profile(props) {\n  const account = props.account\n  const [loggingOut, setLoggingOut] = useState(false)\n\n  return (\n    <div style={ProfileBodyStyle}>\n      <Avatar\n        style={avatarStyle}\n        size={128}\n        src={account.avatarSrc}\n        icon=\"user\"\n      />\n      <center style={{ margin: 20, fontSize: \"large\", fontWeight: \"bold\" }}>\n        {account.name}\n      </center>\n      <Row gutter={50} style={{ textAlign: \"center\" }}>\n        <Col style={{ textAlign: \"right\" }} span={12}>\n          ID: {account.numId}\n        </Col>\n        <Col style={{ textAlign: \"left\" }} span={12}>\n          积分: {account.credit}\n        </Col>\n      </Row>\n      <Row gutter={50} style={{ textAlign: \"center\" }}>\n        <Col style={{ textAlign: \"right\" }} span={12}>\n          <span className=\"sp-follow-stats\" onClick={props.showFollowings}>\n            关注了: {account.followingCount}\n          </span>\n        </Col>\n        <Col style={{ textAlign: \"left\" }} span={12}>\n          <span className=\"sp-follow-stats\" onClick={props.showFollowers}>\n            关注者: {account.followerCount}\n          </span>\n        </Col>\n      </Row>\n      <br />\n      <center>\n        <div style={aboutStyle}>{account.about}</div>\n        <div style={{ marginTop: 30 }}>\n          <Button\n            type=\"primary\"\n            icon=\"edit\"\n            style={{ margin: 10 }}\n            size=\"large\"\n            onClick={props.showEditProfile}\n          >\n            修改资料\n          </Button>\n        </div>\n        <br />\n        <br />\n        <Button onClick={props.showResetPassword} style={{ margin: 10 }}>\n          更改密码\n        </Button>\n        <Button\n          onClick={() => {\n            setLoggingOut(true)\n\n            logout()\n              .then(res => {\n                console.debug(\"logout success\")\n              })\n              .catch(err => {\n                console.error(err)\n              })\n              .then(() => {\n                setLoggingOut(false)\n                props.setAccount(null)\n              })\n          }}\n          loading={loggingOut}\n          type=\"danger\"\n          style={{ margin: 10 }}\n        >\n          登出\n        </Button>\n      </center>\n    </div>\n  )\n}\n\nexport default Profile\n","import \"./Follow.css\"\nimport axios from \"axios\"\n\nimport React, { useEffect, useState, useContext, useRef } from \"react\"\nimport { Avatar, Icon, Radio, Button } from \"antd\"\n\nimport TabContext from \"context/tab-context\"\nimport AccountContext from \"context/account-context\"\nimport urls from \"config/urls\"\nimport followEventHandler from \"./event\"\n\nfunction Follow(props) {\n  const [showFollowers, setShowFollowers] = useState(props.showFollowers)\n  const [loading, setLoading] = useState(true)\n  const [loadingMore, setLoadingMore] = useState(false)\n  const [users, setUsers] = useState([])\n  const tabContext = useContext(TabContext)\n  const accountContext = useContext(AccountContext)\n  const account = accountContext.account\n  const usersRef = useRef([])\n\n  useEffect(() => {\n    setUsers([])\n    loadUsers(0)\n\n    if (!showFollowers) {\n      console.debug(\"register follow handler\")\n      followEventHandler.follow = (followUser, user) => {\n        console.log(\"update followings\")\n        let updatedUsers = []\n        if (!followUser) {\n          updatedUsers = usersRef.current.filter(u => u.id !== user.id)\n        } else {\n          updatedUsers = [user, ...usersRef.current]\n        }\n        setUsers(updatedUsers)\n      }\n\n      return () => {\n        console.debug(\"unregister follow handler\")\n        followEventHandler.follow = () => {\n          console.debug(\"following handler isn't mounted\")\n        }\n      }\n    }\n  }, [showFollowers])\n\n  useEffect(() => {\n    usersRef.current = users\n  }, [users])\n\n  function shouldShowLoadMoreBtn() {\n    // if already loaded users and\n    // haven't loaded all users\n    if (users.length === 0) return false\n    if (showFollowers) {\n      return users.length < props.followerCount\n    } else {\n      return users.length < props.followingCount\n    }\n  }\n\n  const loadUsers = offset => {\n    let url = urls.dbAPI + \"/api/v1/\"\n    if (showFollowers) {\n      url += \"followers\"\n    } else {\n      url += \"followings\"\n    }\n    url += \"?offset=\" + offset\n\n    if (offset) {\n      setLoadingMore(true)\n    } else {\n      setLoading(true)\n    }\n    axios\n      .get(url)\n      .then(resp => {\n        // Notice we have to call prevUsers rather than\n        // just setUsers(users.concat(data)) because\n        // update to state is async, it won't work even if the\n        // call takes 10 mins to return, it always use the user data\n        // when useEffect is called\n        setUsers(prevUsers => prevUsers.concat(resp.data))\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        setLoading(false)\n        setLoadingMore(false)\n      })\n  }\n\n  return (\n    <div className=\"sp-follow-tab\">\n      <Button\n        onClick={props.back}\n        style={{\n          position: \"fixed\",\n          marginTop: 1,\n          marginLeft: 5,\n          border: \"none\",\n          fontSize: \"large\"\n        }}\n        icon=\"arrow-left\"\n      />\n\n      <center className=\"sp-tab-header\">\n        <Radio.Group\n          className=\"sp-toggle-page-site-chat\"\n          size=\"small\"\n          defaultValue={showFollowers}\n          buttonStyle=\"solid\"\n          onChange={e => {\n            setShowFollowers(e.target.value)\n          }}\n        >\n          <Radio.Button value={false}>\n            关注了 {account.followingCount}\n          </Radio.Button>\n          <Radio.Button value={true}>\n            被关注 {account.followerCount}\n          </Radio.Button>\n        </Radio.Group>\n      </center>\n      <div className=\"sp-tab-body\">\n        {loading && (\n          <center>\n            <Icon\n              style={{\n                marginTop: 10,\n                border: \"none\",\n                fontSize: \"large\"\n              }}\n              type=\"loading\"\n            />\n          </center>\n        )}\n\n        {users.map(user => (\n          <div\n            onClick={() => tabContext.selectOtherUser(user)}\n            className=\"sp-follow-row\"\n            key={user.id}\n          >\n            {/* <AvatarWithHoverCard user={user}/> */}\n            <Avatar icon=\"user\" src={user.avatarSrc} />\n            {user.name}\n          </div>\n        ))}\n        <center style={{ margin: 20 }}>\n          {shouldShowLoadMoreBtn() && (\n            <Button\n              loading={loadingMore}\n              type=\"primary\"\n              onClick={() => {\n                loadUsers(users.length)\n              }}\n            >\n              加载更多...\n            </Button>\n          )}\n        </center>\n      </div>\n    </div>\n  )\n}\n\nexport default Follow\n","const storage = {\n  get: (key, callback) => {\n    if (window.chrome && window.chrome.storage) {\n      window.chrome.storage.local.get(key, item => {\n        if (key in item) {\n          callback(item[key])\n        } else {\n          callback(null)\n        }\n      })\n    } else {\n      if (localStorage.hasOwnProperty(key)) {\n        callback(JSON.parse(localStorage.getItem(key)))\n      } else {\n        callback(null)\n      }\n    }\n  },\n  set: (key, value) => {\n    if (window.chrome && window.chrome.storage) {\n      var item = {}\n      item[key] = value\n      window.chrome.storage.local.set(item)\n    } else {\n      const stringValue = JSON.stringify(value)\n      localStorage.setItem(key, stringValue)\n      // localstorage event isn't triggered on same tab\n      // manually create an event and dispatch it\n      const storageEvent = document.createEvent(\"HTMLEvents\")\n      storageEvent.initEvent(\"storage\", true, true)\n      storageEvent.eventName = \"storage\"\n      storageEvent.key = key\n      storageEvent.newValue = stringValue\n      window.dispatchEvent(storageEvent)\n    }\n  },\n  addEventListener: (key, callback) => {\n    if (window.chrome && window.chrome.storage) {\n      window.chrome.storage.onChanged.addListener((changes, area) => {\n        if (key in changes) {\n          console.debug(changes[key])\n          callback(changes[key][\"newValue\"])\n        }\n      })\n    } else {\n      window.addEventListener(\"storage\", storageEvent => {\n        // key;          // name of the property set, changed etc.\n        // oldValue;     // old value of property before change\n        // newValue;     // new value of property after change\n        // url;          // url of page that made the change\n        // storageArea;  // localStorage or sessionStorage,\n        // depending on where the change happened.\n        if (storageEvent.key === key) {\n          callback(JSON.parse(storageEvent.newValue))\n        }\n      })\n    }\n  }\n}\n\nexport default storage\n","import React from \"react\"\nimport { Form, Icon, Input, Button, message } from \"antd\"\n\nimport { login, register } from \"services/account\"\nimport storageManager from \"utils/storage\"\nimport AccountContext from \"context/account-context\"\n\nclass NormalLoginForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      // registration code may be moved into\n      // dedicated file in the future\n      registering: false\n    }\n  }\n\n  componentDidMount() {\n    storageManager.get(\"login\", values => {\n      if (values) {\n        console.debug(\"found login in storage\")\n        this.props.form.setFieldsValue({\n          userId: values.userId,\n          password: values.password\n        })\n        if (this.context.autoLogin) {\n          this.loginUser(values)\n          console.debug(\"auto login\")\n        }\n      } else {\n        console.debug(\"no login found in storage, register now\")\n        const password = Math.random()\n          .toString(36)\n          .slice(-8)\n        this.setState({ registering: true })\n        register(password)\n          .then(resp => {\n            this.setState({ registering: false })\n            const account = resp.data\n            this.props.setAccount(account)\n            storageManager.set(\"login\", {\n              userId: account.numId,\n              password: password\n            })\n            message.success(\"注册成功!\")\n          })\n          .catch(err => {\n            this.setState({ registering: false })\n            // TODO: put specific error message in each .catch\n            // Only use global axios interceptor when backend\n            // return prepared error message\n            // message.error(\"注册失败，请刷新重试\")\n          })\n          .then(() => {})\n      }\n      this.context.stopAutoLogin()\n    })\n  }\n\n  loginUser = values => {\n    this.setState({ loading: true })\n    login(values.userId, values.password)\n      .then(res => {\n        console.debug(res.data)\n        const account = res.data\n        this.setState({ loading: false })\n        this.props.setAccount(account)\n        storageManager.set(\"login\", values)\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({ loading: false })\n      })\n      .then(() => {\n        // can't change state here because if succeed\n        // component will be unmounted before we set loading\n        // to be false\n        // this.setState({ loading: false })\n      })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      console.debug(\"Received values of form: \", values)\n      if (!err) {\n        this.loginUser(values)\n      }\n    })\n  }\n\n  render() {\n    if (this.state.registering) {\n      return (\n        <div className=\"sp-special-tab\">\n          <center style={{ marginTop: \"50%\" }}>注册中...</center>\n        </div>\n      )\n    }\n    const { getFieldDecorator } = this.props.form\n    return (\n      <div className=\"sp-special-tab\">\n        <Form\n          style={{ width: \"70%\", margin: \"auto\", marginTop: 100 }}\n          onSubmit={this.handleSubmit}\n          className=\"login-form\"\n        >\n          <Form.Item>\n            {getFieldDecorator(\"userId\", {\n              rules: [{ required: true, message: \"请输入用户ID\" }]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"ID\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [{ required: true, message: \"请输入密码\" }]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"密码\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              style={{ marginRight: 10 }}\n              loading={this.state.loading}\n            >\n              登录\n            </Button>\n            {/* 或\n            {\n              // eslint-disable-next-line\n              <a>注册</a>\n            } */}\n          </Form.Item>\n        </Form>\n      </div>\n    )\n  }\n}\nNormalLoginForm.contextType = AccountContext\n\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(\n  NormalLoginForm\n)\n\nexport default WrappedNormalLoginForm\n","import React, { useState, useContext, useEffect } from \"react\"\nimport { Button } from \"antd\"\n\nimport AccountContext from \"context/account-context\"\nimport ResetPassword from \"./ResetPassword\"\nimport EditProfile from \"./EditProfile\"\nimport Profile from \"./Profile\"\nimport Follow from \"./Follow\"\nimport Login from \"containers/Account/Login\"\nimport { getAccount } from \"services/account\"\n\nfunction Account(props) {\n  const accountContext = useContext(AccountContext)\n  const account = accountContext.account\n  const setAccount = accountContext.setAccount\n\n  const [resettingPassword, setResetPasswordState] = useState(false)\n  const [edittingProfile, setEdittingProfileState] = useState(false)\n  // showingFollow is for toggling the Follow view\n  // showFollowers is for toggling follower vs following\n  const [showingFollow, setShowingFollowState] = useState(false)\n  const [showFollowers, setShowFollowersState] = useState(false)\n\n  const [loadingAccount, setLoadingAccount] = useState(false)\n  useEffect(() => {\n    // load account for once if user is logged in and\n    // switch to account tab, otherwise the account info\n    // is only loaded when login which becomes stale easily\n    if (account) {\n      setLoadingAccount(true)\n      console.debug(\"refresh account data\")\n      getAccount()\n        .then(resp => {\n          setAccount(resp.data)\n        })\n        .catch(err => {})\n        .then(() => {\n          setLoadingAccount(false)\n        })\n    }\n  }, [])\n\n  const backToMainPage = () => {\n    // called by the back button\n    setResetPasswordState(false)\n    setEdittingProfileState(false)\n    setShowingFollowState(false)\n  }\n\n  if (!account) {\n    return <Login setAccount={setAccount} />\n  }\n\n  return (\n    <div>\n      {loadingAccount && <Button icon=\"loading\" className=\"sp-back-btn\" />}\n      {resettingPassword && <ResetPassword back={backToMainPage} />}\n      {showingFollow && (\n        <Follow\n          showFollowers={showFollowers}\n          followingCount={account.followingCount}\n          followerCount={account.followerCount}\n          back={backToMainPage}\n        />\n      )}\n      {edittingProfile && (\n        <EditProfile\n          account={account}\n          setAccount={setAccount}\n          back={backToMainPage}\n        />\n      )}\n      <Profile\n        account={account}\n        showResetPassword={setResetPasswordState}\n        showEditProfile={setEdittingProfileState}\n        showFollowings={() => {\n          setShowingFollowState(true)\n          setShowFollowersState(false)\n        }}\n        showFollowers={() => {\n          setShowingFollowState(true)\n          setShowFollowersState(true)\n        }}\n        setAccount={setAccount}\n      />\n    </div>\n  )\n}\n\nexport default Account\n","import React from \"react\"\nimport { Button, Avatar, Icon, Row, Col } from \"antd\"\n\nconst avatarStyle = {\n  margin: \"auto\",\n  marginTop: 20,\n  display: \"block\"\n}\n\nconst aboutStyle = {\n  display: \"inline-block\",\n  minWidth: 200,\n  maxWidth: 350,\n  borderBottom: \"1px solid lightgray\",\n  textAlign: \"left\",\n  overflow: \"auto\",\n  maxHeight: 72,\n  padding: 5,\n  paddingLeft: 10,\n  paddingRight: 10,\n  wordBreak: \"break-word\"\n}\n\nfunction ProfileBody(props) {\n  const {\n    directMessage,\n    loading,\n    loaded,\n    user,\n    following,\n    followerCount,\n    followUser\n  } = props\n\n  return (\n    <div>\n      <Avatar style={avatarStyle} size={128} src={user.avatarSrc} icon=\"user\" />\n      <center style={{ margin: 20, fontSize: \"large\", fontWeight: \"bold\" }}>\n        {user.name}\n        {loading && (\n          <Icon\n            style={{\n              display: \"block\",\n              marginTop: 10,\n              border: \"none\"\n            }}\n            type=\"loading\"\n          />\n        )}\n      </center>\n      {loaded && (\n        <span>\n          <Row gutter={50} style={{ textAlign: \"center\" }}>\n            <Col style={{ textAlign: \"right\" }} span={12}>\n              ID: {user.numId}\n            </Col>\n            <Col style={{ textAlign: \"left\" }} span={12}>\n              关注者: {followerCount}\n            </Col>\n          </Row>\n          <br />\n          <center>\n            <div style={aboutStyle}>{user.about}</div>\n            <div style={{ marginTop: 30 }}>\n              {following && (\n                <Button\n                  icon=\"user-delete\"\n                  style={{ margin: 10 }}\n                  size=\"large\"\n                  onClick={() => {\n                    followUser(false)\n                  }}\n                >\n                  取消关注\n                </Button>\n              )}\n              {!following && (\n                <Button\n                  type=\"primary\"\n                  icon=\"user-add\"\n                  style={{ margin: 10 }}\n                  size=\"large\"\n                  onClick={() => {\n                    followUser(true)\n                  }}\n                >\n                  关注\n                </Button>\n              )}\n\n              <Button\n                onClick={() => {\n                  directMessage(user)\n                }}\n                icon=\"mail\"\n                style={{ margin: 10 }}\n                size=\"large\"\n              >\n                私信\n              </Button>\n            </div>\n          </center>\n        </span>\n      )}\n    </div>\n  )\n}\n\nexport default ProfileBody\n","import React from \"react\"\nimport { Button } from \"antd\"\n\nimport ProfileMeta from \"./ProfileMeta\"\nimport PrfileBody from \"./ProfileBody\"\n\nfunction OtherProfile(props) {\n  if (!props.data) return <span />\n\n  const user = {\n    avatarSrc: props.data.avatarSrc,\n    name: props.data.name,\n    id: props.data.userId || props.data.id\n  }\n\n  return (\n    <div className=\"sp-special-tab\">\n      <Button\n        onClick={() => props.selectOtherUser()}\n        className=\"sp-back-btn\"\n        icon=\"arrow-left\"\n      />\n      <ProfileMeta user={user}>\n        <PrfileBody directMessage={props.directMessage} />\n      </ProfileMeta>\n    </div>\n  )\n}\n\nexport default OtherProfile\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getMessages = offset => {\n  const params = {\n    offset: offset\n  }\n  return axios.get(`${urls.dbAPI}/api/v1/messages`, {\n    params: params\n  })\n}\n\nexport const postMessage = (userId, content, offset) => {\n  const payload = {\n    userId: userId,\n    content: content,\n    offset: offset\n  }\n  return axios.post(`${urls.dbAPI}/api/v1/message`, payload)\n}\n","import \"./Conversation.css\"\n\nimport React, { useContext, useState, useRef, useEffect } from \"react\"\nimport { Button } from \"antd\"\n\nimport Message from \"containers/Chat/Message\"\nimport { postMessage } from \"services/message\"\nimport AccountContext from \"context/account-context\"\nimport TabContext from \"context/tab-context\"\nimport InputWithPicker from \"components/InputWithPicker\"\n\nconst conversationBodyStyle = {\n  height: \"calc(100% - 107px)\",\n  overflow: \"auto\",\n  width: \"100%\",\n  position: \"fixed\",\n  background: \"#f6f9fc\",\n  padding: 10,\n  paddingBottom: 50\n}\n\nconst AUTO_SCROLL_TRESHOLD_DISTANCE = 150\n\nfunction Conversation(props) {\n  const account = useContext(AccountContext).account\n  const tabContext = useContext(TabContext)\n  const messages = props.conversation.messages\n  const other = props.conversation.user\n  const offset = props.offset\n  const [sending, setSending] = useState(false)\n  const bodyRef = useRef()\n\n  let lastMsg = null\n  const body = messages.map(msg => {\n    msg.text = msg.content\n    if (msg.self) {\n      msg.name = account.name\n      msg.avatarSrc = account.avatarSrc\n      msg.userId = account.id\n    } else {\n      msg.name = other.name\n      msg.avatarSrc = other.avatarSrc\n      msg.userId = other.id\n    }\n    let mergeAbove = false\n    if (lastMsg && lastMsg.userId === msg.userId) mergeAbove = true\n    lastMsg = msg\n    return <Message key={msg.id} data={msg} mergeAbove={mergeAbove} />\n  })\n  useEffect(() => {\n    const bodyDiv = bodyRef.current\n    bodyDiv.scrollTop = bodyDiv.scrollHeight\n  }, [])\n\n  useEffect(() => {\n    console.debug(\"auto scroll down\")\n    if (messages && messages.length) {\n      const lastMsg = messages[messages.length - 1]\n      let timeout = 50\n      if (lastMsg.type === \"sticker\") {\n        timeout = 500\n      }\n      scrollToBottomIfNearBottom(timeout)\n    }\n  }, [messages])\n  function scrollToBottomIfNearBottom(timeout) {\n    timeout = timeout || 100\n    const bodyDiv = bodyRef.current\n    if (\n      bodyDiv.scrollHeight - bodyDiv.scrollTop - bodyDiv.offsetHeight <\n      AUTO_SCROLL_TRESHOLD_DISTANCE\n    ) {\n      setTimeout(() => {\n        bodyDiv.scrollTop = bodyDiv.scrollHeight\n      }, timeout)\n    }\n  }\n  function send(input) {\n    setSending(true)\n    postMessage(other.id, input, offset)\n      .then(resp => {\n        props.mergeAndSaveNewConversations(resp.data)\n        // TODO: maybe display message locally right away\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        setSending(false)\n      })\n    return true\n  }\n\n  return (\n    <div className=\"sp-inbox-conversation\">\n      <Button onClick={props.back} className=\"sp-back-btn\" icon=\"arrow-left\" />\n      <div className=\"sp-tab-header\">\n        <center>\n          {/* <Button icon=\"refresh\" size=\"small\">\n            刷新\n          </Button> */}\n          <span>\n            与\n            <span\n              className=\"sp-conversation-username\"\n              onClick={() => tabContext.selectOtherUser(other)}\n            >\n              {other.name}\n            </span>\n            的对话\n          </span>\n        </center>\n      </div>\n      <div ref={bodyRef} style={conversationBodyStyle}>\n        {body}\n      </div>\n\n      <div className=\"sp-chat-bottom\">\n        <InputWithPicker sending={sending} send={send} />\n      </div>\n    </div>\n  )\n}\nexport default Conversation\n","import \"./Inbox.css\"\nimport React, { useEffect, useState, useContext, useRef } from \"react\"\nimport { Avatar, Icon, Radio } from \"antd\"\nimport moment from \"moment\"\n\nimport Conversation from \"./Conversation\"\nimport { getMessages } from \"services/message\"\nimport AccountContext from \"context/account-context\"\nimport storageManager from \"utils/storage\"\n\nfunction Inbox(props) {\n  const user = props.user\n  const setUser = props.setUser\n  const account = useContext(AccountContext).account\n  let storageKey = \"inbox-\"\n  if (account) storageKey += account.id\n  const prevAccountRef = useRef()\n  const [conversations, setConversations] = useState({})\n  const [showNotifications, setShowNotifications] = useState(false)\n  // offset equals to the biggest message id\n  const [loading, setLoading] = useState(false)\n  let selectedConversation = null\n  if (user) {\n    if (user.id in conversations) {\n      selectedConversation = conversations[user.id]\n    } else {\n      selectedConversation = {\n        user: user,\n        messages: []\n      }\n      setConversations({ ...conversations, [user.id]: selectedConversation })\n    }\n  }\n  function getMessagesFromServer(offset) {\n    setLoading(true)\n    getMessages(offset)\n      .then(resp => {\n        // Merge with existing data\n        mergeAndSaveNewConversations(resp.data)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        setLoading(false)\n      })\n  }\n  function mergeAndSaveNewConversations(newConversations) {\n    // merge and save new conversations into storage\n    storageManager.get(storageKey, conversations => {\n      conversations = conversations || {}\n      Object.keys(newConversations).forEach(userId => {\n        if (userId in conversations) {\n          conversations[userId].messages.push(\n            ...newConversations[userId].messages\n          )\n          // use the new user data\n          conversations[userId].user = newConversations[userId].user\n        } else {\n          conversations[userId] = newConversations[userId]\n        }\n      })\n      storageManager.set(storageKey, conversations)\n    })\n  }\n  function getOffset(conversations) {\n    let offset = 0\n    Object.values(conversations).forEach(c => {\n      if (c.messages.length) {\n        c.lastMsg = c.messages[c.messages.length - 1]\n        offset = Math.max(offset, c.lastMsg.id)\n      }\n    })\n    return offset\n  }\n\n  useEffect(() => {\n    // console.debug(\"register inbox storage listener\")\n    // storageManager.addEventListener(\"inbox\", conversations => {\n    //   setConversations(conversations)\n    // })\n  }, [])\n\n  useEffect(() => {\n    // Listen for account change, 2 cases:\n    // 1. not logged in => logged in  (this may not be when\n    // the whole app logged in, since Inbox component is mounted\n    // later than the App component)\n    // 2. logged in => logged out\n\n    // There shouldn't be a case that's logged in as user A\n    // then suddenly changed to user B without going through\n    // a log out step\n\n    // When logged in\n    // 0. clear messages in memory (not in storage)\n    // 1. get messages from storage\n    // 2. get new messages from server using offset and save into storage\n\n    // When logged out, clear the memory\n\n    if (account) {\n      if (!prevAccountRef.current) {\n        // If logged in as a different account or first time login?\n        console.debug(\"[inbox] logged in, load from storage\")\n        storageManager.get(storageKey, conversations => {\n          conversations = conversations || {}\n          setConversations(conversations)\n          console.debug(\"[inbox] loaded from storage, fetch from server\")\n          getMessagesFromServer(getOffset(conversations))\n        })\n        console.debug(\"register inbox storage listener\")\n        // TODO: if same account login and logout and login again\n        // this listener is registered multiple times, should unregister\n        // when logout\n        storageManager.addEventListener(storageKey, conversations => {\n          console.debug(\"[inbox] storage updated\")\n          setConversations(conversations)\n        })\n      }\n    } else {\n      console.debug(\"[inbox] logged out\")\n      setUser(null)\n      setConversations({})\n      // Clear memory\n    }\n\n    prevAccountRef.current = account\n  }, [account])\n\n  // Backend/storage returns dictionary data structure so\n  // it's easy to insert new conversation\n  // Need to convert into array and sort by date to display\n  // Also get offset\n  const conversationsArray = Object.keys(conversations).map(userId => {\n    const c = conversations[userId]\n    if (c.messages.length) {\n      c.lastMsg = c.messages[c.messages.length - 1]\n      c.time = moment.utc(c.lastMsg.created)\n    } else {\n      // if no message, this is user attempting to start conversation\n      c.time = moment.utc()\n    }\n    return c\n  })\n\n  conversationsArray.sort((a, b) => {\n    return b.time - a.time\n  })\n\n  let rows = conversationsArray.map(c => {\n    const user = c.user\n    return (\n      <div\n        onClick={() => {\n          setUser(user)\n        }}\n        key={user.id}\n        className=\"sp-inbox-row\"\n      >\n        <Avatar icon=\"user\" src={user.avatarSrc} />\n        <span className=\"sp-row-right\">\n          <div>\n            {user.name}\n            {c.lastMsg && (\n              <span className=\"sp-message-time\">{c.time.fromNow()}</span>\n            )}\n          </div>\n          {c.lastMsg && (\n            <div className=\"sp-message-content\">{c.lastMsg.content}</div>\n          )}\n        </span>\n      </div>\n    )\n  })\n  if (conversationsArray.length === 0) {\n    rows = <center style={{ margin: 20 }}>没有消息</center>\n  }\n\n  if (!account) {\n    return (\n      <div className=\"sp-inbox-tab\">\n        <center className=\"sp-tab-header\">尚未登录</center>\n      </div>\n    )\n  }\n  return (\n    <div className=\"sp-inbox-tab\">\n      {selectedConversation && !showNotifications && (\n        <Conversation\n          back={() => {\n            setUser(null)\n          }}\n          offset={getOffset(conversations)}\n          conversation={selectedConversation}\n          mergeAndSaveNewConversations={mergeAndSaveNewConversations}\n        />\n      )}\n      {!selectedConversation && (\n        <div>\n          <center className=\"sp-tab-header\">\n            {loading && (\n              <Icon\n                style={{\n                  margin: 3,\n                  position: \"absolute\",\n                  left: 10,\n                  border: \"none\",\n                  fontSize: \"large\"\n                }}\n                type=\"loading\"\n              />\n            )}\n            <Radio.Group\n              size=\"small\"\n              defaultValue={showNotifications}\n              buttonStyle=\"solid\"\n              onChange={e => {\n                setShowNotifications(e.target.value)\n              }}\n            >\n              <Radio.Button value={false}>私信</Radio.Button>\n              <Radio.Button value={true}>消息</Radio.Button>\n            </Radio.Group>\n          </center>\n          <div className=\"sp-tab-body\" style={{ paddingBottom: 70 }}>\n            {!showNotifications && rows}\n            {showNotifications && (\n              <center style={{ margin: 20 }}>没有消息</center>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Inbox\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getLatestDanmus = () => {\n  return axios.get(`${urls.dbAPI}/api/v1/latest_danmus`)\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Icon } from \"antd\"\n\nimport { getLatestDanmus } from \"services/danmu\"\nimport AvatarWithHoverCard from \"containers/OtherProfile/AvatarWithHoverCard\"\n\nfunction Danmus(props) {\n  const [loading, setLoading] = useState(true)\n  const [danmus, setDanmus] = useState([])\n  useEffect(() => {\n    getLatestDanmus()\n      .then(resp => {\n        setDanmus(resp.data)\n      })\n      .catch(err => {})\n      .then(() => {\n        setLoading(false)\n      })\n  }, [])\n  if (loading)\n    return (\n      <center>\n        <Icon type=\"loading\" />\n      </center>\n    )\n\n  return danmus.map(danmu => (\n    <div className=\"sp-home-comment\" key={danmu.id}>\n      <a\n        className=\"sp-comment-url\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={danmu.url}\n      >\n        {danmu.url}\n      </a>\n      <div className=\"sp-comment-body\">\n        <AvatarWithHoverCard\n          className=\"sp-pointer-cursor\"\n          size=\"small\"\n          user={danmu.user}\n        />\n        <span className=\"sp-comment-message\">{danmu.content}</span>\n      </div>\n    </div>\n  ))\n}\n\nexport default Danmus\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getLatestComments = () => {\n  return axios.get(`${urls.dbAPI}/api/v1/latest_comments`)\n}\n","import \"./Comment.css\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { Icon } from \"antd\"\n// import moment from \"moment\"\n\nimport AvatarWithHoverCard from \"containers/OtherProfile/AvatarWithHoverCard\"\nimport { getLatestComments } from \"services/comment\"\n\nfunction Comments(props) {\n  const [loading, setLoading] = useState(true)\n  const [comments, setComments] = useState([])\n  useEffect(() => {\n    getLatestComments()\n      .then(resp => {\n        setComments(resp.data)\n      })\n      .catch(err => {})\n      .then(() => {\n        setLoading(false)\n      })\n  }, [])\n  if (loading)\n    return (\n      <center>\n        <Icon type=\"loading\" />\n      </center>\n    )\n  return comments.map(comment => (\n    <div className=\"sp-home-comment\" key={comment.id}>\n      <a\n        className=\"sp-comment-url\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={comment.url}\n      >\n        {comment.url}\n      </a>\n      <div className=\"sp-comment-body\">\n        <AvatarWithHoverCard\n          className=\"sp-pointer-cursor\"\n          size=\"small\"\n          user={comment.user}\n        />\n        <span className=\"sp-comment-message\">{comment.content}</span>\n      </div>\n      {/* <div className=\"sp-message-body text\">\n        <div style={{ marginBottom: 5 }}>\n          <span className=\"sp-comment-message-username\">\n            {comment.user.name}\n          </span>\n          <span className=\"sp-comment-message-time\">\n            {moment.utc(comment.created).fromNow()}\n          </span>\n        </div>\n        <div>{comment.content}</div>\n      </div> */}\n    </div>\n  ))\n}\n\nexport default Comments\n","import \"./Users.css\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { Icon } from \"antd\"\n\nimport { getLatestUsers } from \"services/user\"\nimport AvatarWithHoverCard from \"containers/OtherProfile/AvatarWithHoverCard\"\n\nfunction Users(props) {\n  const [loading, setLoading] = useState(true)\n\n  const [users, setUsers] = useState([])\n  useEffect(() => {\n    getLatestUsers()\n      .then(resp => {\n        setUsers(resp.data)\n      })\n      .catch(err => {})\n      .then(() => {\n        setLoading(false)\n      })\n  }, [])\n  if (loading)\n    return (\n      <center>\n        <Icon type=\"loading\" />\n      </center>\n    )\n  return users.map(user => (\n    <div className=\"sp-home-users\" key={user.id}>\n      <div>\n        <AvatarWithHoverCard className=\"sp-pointer-cursor\" user={user} />\n        <span className=\"sp-username\">{user.name}</span>\n      </div>\n    </div>\n  ))\n}\n\nexport default Users\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getPopularRooms = () => {\n  return axios.get(`${urls.socketAPI}/api/popular_rooms`)\n}\n","import React, { useState, useEffect, useContext } from \"react\"\nimport { Icon } from \"antd\"\n\nimport TabContext from \"context/tab-context\"\nimport { getPopularRooms } from \"services/room\"\nimport socketManager from \"socket/socket\"\n\nfunction Rooms(props) {\n  const [loading, setLoading] = useState(true)\n  const [rooms, setRooms] = useState([])\n  const tabContext = useContext(TabContext)\n\n  useEffect(() => {\n    getPopularRooms()\n      .then(resp => {\n        setRooms(resp.data)\n      })\n      .catch(err => {})\n      .then(() => {\n        setLoading(false)\n      })\n  }, [])\n  if (loading)\n    return (\n      <center>\n        <Icon type=\"loading\" />\n      </center>\n    )\n  return rooms.map(room => {\n    let roomId = room.roomId\n    if (roomId === \"lobby\") {\n      return (\n        <div className=\"sp-home-comment\" key={roomId}>\n          <div\n            className=\"sp-comment-url\"\n            onClick={() => {\n              tabContext.changeTab(\"chat\")\n              socketManager.togglePageSite(\"lobby\")\n            }}\n          >\n            聊天大厅 ({room.userCount})\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"sp-home-comment\" key={roomId}>\n        <a\n          className=\"sp-comment-url\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href={room.url}\n        >\n          {room.title} ({room.userCount})\n        </a>\n      </div>\n    )\n  })\n}\n\nexport default Rooms\n","import React, { useState } from \"react\"\n\nimport { Collapse } from \"antd\"\n\nimport Danmus from \"./Danmus\"\nimport Comments from \"./Comments\"\nimport Users from \"./Users\"\nimport Rooms from \"./Rooms\"\n\nconst Panel = Collapse.Panel\n\nfunction Home(props) {\n  return (\n    <Collapse\n      bordered={false}\n      className=\"sp-special-tab\"\n      defaultActiveKey={[\"hot-chatrooms\"]}\n      onChange={key => {}}\n    >\n      <Panel header=\"热门聊天室\" key=\"hot-chatrooms\">\n        <Rooms />\n      </Panel>\n\n      <Panel header=\"最新网页留言\" key=\"latest-comments\">\n        <Comments />\n      </Panel>\n      <Panel header=\"最新视频弹幕\" key=\"latest-danmus\">\n        <Danmus />\n      </Panel>\n      <Panel header=\"新用户\" key=\"new-users\">\n        <Users />\n      </Panel>\n    </Collapse>\n  )\n}\n\nexport default Home\n","import \"antd/dist/antd.css\"\nimport \"./Tab.css\"\n\nimport React, { useState } from \"react\"\nimport { Tabs, Icon, Tooltip } from \"antd\"\n\nimport Chat from \"containers/Chat\"\nimport Comment from \"containers/Comment\"\nimport Account from \"containers/Account\"\nimport OtherProfile from \"containers/OtherProfile\"\nimport Inbox from \"containers/Inbox\"\nimport Home from \"containers/Home\"\n\nimport TabContext from \"context/tab-context\"\n\nconst TabPane = Tabs.TabPane\n\nfunction Tab(props) {\n  console.log(\"render tab\")\n\n  const [activeTab, changeTab] = useState(props.tab)\n  // view other's profile\n  const [other, selectOtherUser] = useState()\n  // view direct message with other\n  const [conversationUser, setCoversationUser] = useState()\n  function directMessage(user) {\n    selectOtherUser(null)\n    changeTab(\"inbox\")\n    setCoversationUser(user)\n  }\n\n  return (\n    <TabContext.Provider\n      value={{\n        selectOtherUser: selectOtherUser,\n        changeTab: changeTab,\n        directMessage: directMessage\n      }}\n    >\n      <div className=\"card-container\">\n        <Tabs\n          onChange={val => {\n            // minimize actually means hide\n            // but there will be a small icon to unhide\n            if (val == \"minimize\") {\n              window.parent.postMessage(\"minimize\", \"*\")\n              return\n            }\n            changeTab(val)\n            selectOtherUser(null)\n          }}\n          activeKey={activeTab}\n          type=\"card\"\n        >\n          <TabPane\n            tab={\n              <Tooltip title=\"发现\" placement=\"bottom\">\n                <Icon type=\"home\" />\n              </Tooltip>\n            }\n            key=\"home\"\n          >\n            <Home />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"实时聊天\" placement=\"bottom\">\n                <Icon type=\"message\" />\n              </Tooltip>\n            }\n            key=\"chat\"\n            forceRender={true}\n          >\n            <Chat />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"留言板\" placement=\"bottom\">\n                <Icon type=\"form\" />\n              </Tooltip>\n            }\n            key=\"comment\"\n          >\n            <Comment />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"收件箱\" placement=\"bottom\">\n                <Icon type=\"mail\" />\n              </Tooltip>\n            }\n            key=\"inbox\"\n          >\n            <Inbox user={conversationUser} setUser={setCoversationUser} />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"个人信息\" placement=\"bottom\">\n                <Icon type=\"user\" />\n              </Tooltip>\n            }\n            key=\"account\"\n          >\n            <Account />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"隐藏聊天盒\" placement=\"bottom\">\n                <Icon type=\"close\" />\n              </Tooltip>\n            }\n            key=\"minimize\"\n          >\n            <span>shoud not see this!</span>\n          </TabPane>\n        </Tabs>\n      </div>\n      <OtherProfile data={other} selectOtherUser={selectOtherUser} />\n    </TabContext.Provider>\n  )\n}\n\nexport default Tab\n","import axios from \"axios\"\nimport moment from \"moment\"\n\nimport React from \"react\"\nimport { Icon, message } from \"antd\"\n\nimport Tab from \"containers/Tab\"\nimport AccountContext from \"context/account-context\"\nimport socketManager, { socketHandler } from \"socket/socket\"\nimport storageManager from \"utils/storage\"\nimport { setUrl, getUrl } from \"utils/url\"\nimport { setPageTitle, getPageTitle } from \"utils/pageTitle\"\n\nrequire(\"moment/locale/zh-cn\") //moment.js bug, has to manually include\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: null,\n      // A few steps before mounting the app\n      // 1. Check local/chrome storage to see if there's account data\n      // , if so, mount the app.\n      // 2. If no account in storage, check if there's credential data\n      // in storage, if so, mount the app and auto login\n      // 3. If neither account nor credential data is in storage,\n      // mount the app and auto register\n\n      // In short, do not mount until done loading account/credential\n      // from storage\n\n      // above comment needs update\n      loadingFromStorage: true,\n      // Only if there is no account data in storage on page load\n      // autoLogin only once per page load\n      autoLogin: false\n    }\n    const locale = window.navigator.userLanguage || window.navigator.language\n    if (locale.indexOf(\"zh\") > -1) {\n      moment.locale(\"zh-cn\")\n    }\n    // console.debug(locale)\n    message.config({\n      top: 80,\n      duration: 2,\n      maxCount: 3\n    })\n  }\n\n  componentDidMount() {\n    // TODO: this componentDidMount is registering a\n    // couple different things, maybe move them to dedicated module\n\n    // General settings for ajax calls\n    axios.interceptors.response.use(\n      response => {\n        // Do something with response data\n        return response\n      },\n      error => {\n        let errorMessage = \"出错了\"\n        // set account to null when we receive 401\n        if (error.response && error.response.status === 401) {\n          this.setAccount(null)\n          errorMessage = \"请重新登录\"\n        }\n        if (\n          error.response &&\n          error.response.data &&\n          error.response.data.error\n        ) {\n          errorMessage = error.response.data.error\n        }\n        message.error(errorMessage)\n        return Promise.reject(error)\n      }\n    )\n    console.log(\"get account from storage, register account change listener\")\n    storageManager.get(\"account\", account => {\n      if (account) {\n        console.debug(\"found account in storage\")\n        console.debug(account)\n        this.setState({ account: account })\n      } else {\n        this.setState({ autoLogin: true })\n        console.debug(\"no account found in storage\")\n      }\n      this.setState({ loadingFromStorage: false })\n    })\n    storageManager.addEventListener(\"account\", account => {\n      this.setState({ account: account })\n    })\n    socketHandler.onConnected = () => {\n      message.success(\"连接成功！\", 2)\n    }\n    socketHandler.onDisconnected = () => {\n      message.warn(\"连接已断开\", 2)\n    }\n    window.addEventListener(\n      \"message\",\n      e => {\n        if (e && e.data && e.data.locationUpdate) {\n          const newUrl = e.data.url\n          const newTitle = e.data.title\n          if (getUrl() !== newUrl || getPageTitle() !== newTitle) {\n            setUrl(newUrl)\n            setPageTitle(newTitle)\n            socketManager.updatePageInfo({\n              url: newUrl,\n              title: newTitle\n            })\n          }\n        }\n      },\n      false\n    )\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Need to differentiate login/logout with profile info update\n    // maybe shouldn't have grouped them in one object?\n    const login = !prevState.account && this.state.account\n    const logout = prevState.account && !this.state.account\n    if (login) {\n      console.debug(\"logged in\")\n      axios.defaults.headers.common[\"token\"] = this.state.account.token\n      socketManager.connect(this.state.account, true)\n    }\n    if (logout) {\n      console.debug(\"logged out\")\n      axios.defaults.headers.common[\"token\"] = null\n      socketManager.disconnect()\n      // TODO:  change tab?\n    }\n  }\n\n  setAccount = account => {\n    console.debug(\"set account\")\n    storageManager.set(\"account\", account)\n  }\n\n  stopAutoLogin = () => {\n    this.setState({ autoLogin: false })\n  }\n\n  render() {\n    if (this.state.loadingFromStorage) {\n      return (\n        <center>\n          <Icon style={{ marginTop: \"50%\" }} type=\"loading\" />\n        </center>\n      )\n    }\n    let tab = \"home\"\n    if (!this.state.account) {\n      tab = \"account\"\n    }\n    return (\n      <AccountContext.Provider\n        value={{\n          account: this.state.account,\n          setAccount: this.setAccount,\n          autoLogin: this.state.autoLogin,\n          stopAutoLogin: this.stopAutoLogin\n        }}\n      >\n        <Tab tab={tab} />\n      </AccountContext.Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}